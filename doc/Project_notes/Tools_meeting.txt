
====================================================================
Annotation Tools Meeting - 10th Sept 2009


--------------------------------------------------------------------
General Tools changes


Tool monitoring
---------------
All the annotation tools have options that are probably either unused
or only rarely used. We need to monitor which options are used and
use this information to better tailor menus, shortcuts etc.

Along with this is would be good to provide tools to allow annotators
to record which activities are repetitive and/or time consuming.



Shortcuts
---------
There are some widely accepted standards that we should support 
e.g. "Close window" is usually Cntl-W, but we should also ensure
shortcuts are common across our own tools.



--------------------------------------------------------------------
ZMap


Show mismatches
---------------
Request for zmap to add bars (or other indicators) to boxes 
representing matches to show where there are nucleotide mismatches.
This is problematical because we would need to compare the actual
sequences and it is not workable for zmap to store all the match
sequences in order to do this. BUT we could add % identity to the
data displayed or indicate in some other way the goodness of the
match.


Show raw sequences
------------------
A recurrent request from annotators is that they wish to see the
raw match sequences, this was doable for previous sequence sources
(just about) but will not be possible for sources from the new
sequencing machines because of the sheer volume of data.

We need to think about a different way to display this data, much
of it is repetitive (i.e. redundant) and it feels like there should
be some way to show this to the annotator in as compressed but
still informative way.


Navigation
----------
We still have more we could do, e.g. shortcuts to jump up and down
exons of a selected transcript, split windows for transcript
viewing in a useful way etc. etc.


--------------------------------------------------------------------
Blixem


Navigation
----------
Blixem-ZMap: commonly annotators wish to move backwards and forwards
between the two programs to view a particular alignment(s). ZMap
already has inter-program communication but this needs adding to
blixem to allow the user to click on an alignment and then move
to it in blixem and vice versa.


Match Sequence zooming/scrolling
--------------------------------
Currently the font size for the actual match sequences is fixed which
limits the length of sequence that can be viewed. By introducing text
display in one or two other sizes the text could in effect be zoomed
to allow the user to see more or less sequence.

Several uses would also like there to scroll bars with more continuous
and smooth scrolling than there is now.


Match Sequence Ends Display
---------------------------
Currently blixem only displays the run of bases from the match string
for the alignment block, annotators would find it useful to be able
to see the leading and trailing bases as well to help with verifying
splice sites. This requires:

- setting the number of bases displayed via a config file option.

- visual indication of whether extra bases are unmatched or match a
previous/subsequent block.


Exons in the navigation window
------------------------------
Several improvements are required:

- provide some kind of "bumping" mechanism to allow users to see
overlapping transcripts more clearly.

- add labels to exons to identify their feature.

- allow users to select which types of exons are displayed, could make
this interactive, i.e. load several types and then allow user to filter.


Matches in navigation window
----------------------------
Currently an overview of the forward/reverse strand match alignments
displayed in graph form with the y axis for both running from 0 to
100% Identity. This usually wastes considerable screen space as most
matches lie in the 90 to 100% range. The range shown should be
calculated dynamically so that the space allocated is minimal.


Alignment Choosing
------------------
Annotators would like to be able to choose which matches are shown in 
blixem:

- single match (already done)

- all highlighted matches

- all matches within the marked region

- several different kinds (columns) of matches


Exonerate type matches
----------------------
Exon-aware aligners the produce one extended alignment where previously
there were a number of independant HSP's. Currently blixem orders the
match sequences according to properties of just those match sequences
that can be seen in the lower window. This will need to change in at
least two ways:

- score information will need to be added in addition to %id

- the overall %id or score of the complete alignment will need to be used
for ordering by score, not just the score for that individual block.

- the display of the main blocks for these alignments will need to 
have a visual indication that the block forms part of a larger
prediction.


Export of annotator identified features
---------------------------------------
Annotators use blixem to verify the details of matches that are hard
to find automatically: exon variations, splice site corrections, poly-A
features and more. They need to be able to export these using our
usual cut buffer mechanism.


---------------------------------------------------------------------
Dotter


Bad coordinates
---------------
The coordinate range shown by dotter is often wrong, needs fixing.


Cut/paste of coordinates
------------------------
copy/paste to/from dotter of display coords is poor/doesn't work
currently.


Blacking Out
------------
Under certain conditions dotter draws it's entire sequence display
area black, it's not clear why this is. Adam will provide test
data.




---------------------------------------------------------------------
Otterlace


Clone Boundaries
----------------
The are some edge effects with alignments and other features at clone
boundaries.



---------------------------------------------------------------------
External tools

LookSeq
-------
Lookseq was designed to display the very high volumes of sequencing
data coming from the new machines. It has a web-based version and
apparently a pure java version. If we could call it directly we
could take advantage of it as a tool to display this type of data.
This would require:

- understanding the parameters/input files it requires

- being able to translate our coordinates into the lookseq
coordinates (not necessary if they use the same underlying assembly.)

- annotators may wish to filter the lookseq display, it's not known
if this is possible.




====================================================================
