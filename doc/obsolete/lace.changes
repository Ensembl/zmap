Roy,


List of changes to put zmap into lace....


1) otter/ensembl-otter/modules/Bio/Otter/Lace/Client.pm

- add zmap port configuration
  (Done rds)
- add zmap window_id directory configuration
  (Done rds)
- Methods addded to Client
  (Done edgrif)

- add browser to otterlace options and correctly create the correct objects


otter/tk/MenuCanvasWindow/XaceSeqChooser.pm

- launch_zmap() and get_zmap_xwindow_id() added to launch zmap instead of xace.



otter/PerlModules/Hum/Ace/XaceRemote.pm

- copy to XzmapRemote && s/(x)?ace/zmap/






Some notes....

XaceSeqChooser.pm and ZMapSeqChooser.pm have a lot of common code which I
guess will go away if zmap replaces xace.  For now I have just copied
XaceSeqChooser.pm and hacked it to produce ZMapSeqChooser.pm.



Loci
----

There is a lot of code to support manipulation of Locus objects and their
asssociated display in fmap. I assume that this is mostly about showing the
annotator what they have changed rather than using acedb as a repository of
edits which then have to be extracted from the acedb database later.


Methods
-------

The code adds a method for showing genes if it does not exist in the database,
it has color=blue and cds_color=midblue. The name comes from Defaults.pm and
maybe from other places.

I'm not sure from the code I've looked at how the methods are used. Need to find
this out as we will be dealing with "types" or styles....





Xremote Commands used:

Are issued from the xace_remote object which includes the following methods:

Method							Purpose

$xr->load_ace(<data to be parsed into acedb>)   	issues parse command add/modify/delete data

$xr->save						tells acedb to save to disk

$xr->send_command(<string>)				sends specified string which must be a
							recognised acedb command to acedb



Functions:


Function		XaceSeqChooser.pm			ZMapSeqChooser.pm


update_ace_display	'gif ; seqrecalc'			'recalculate'

We should check how this is used, if its purpose is to simply show a small update to
perhaps exon boundaries or whatever then we should include in the recalculate command
the item + coords to be updated and then do that directly in the zmap, not go through
and recalculate the whole lot again.

The function receives some ace file format data which it sends to acedb to be parsed in,
it then saves and recalculates the fmap.


save_data

tries to do a save of the database and then may restart xace displaying the
saved data.




attach_xace		'writeaccess -gain'			'writeaccess'

Is this needed for lace ? In the lace system perhaps all updates could be via the otter-lace
interface.





get_zmap_xwindow_id	'writeaccess -gain'			'writeaccess'

Remarks as above.




delete_subsequences	'gif ; seqrecalc'			'recalculate'

Remarks as before, with the addition that this routine makes up a command to be
parsed into acedb to remove objects and then saves and does a recalculation. To
duplicate this we would need to do a recalculate but pass over the names of
things to be removed.



edit_new_subsequence	integers_from_clipboard

An indirect interaction with fmap, xace can be configured so that it puts the coords
of a feature in the clip board when the feature is selected. We need to replicate
this function.







