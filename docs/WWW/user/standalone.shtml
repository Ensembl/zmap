<h2>ZMap Standalone Configuration</h2>

<fieldset><legend>Introduction</legend>
<p><b>NOTE</b> This refers to current practice in Septmeber 2010 and there may be some changes in the near future.
</p>
<h3>Orientation</h3>
<p>ZMap is most commonly used as part of the Otterlace genome annotation system but can be run on its own.
Otterlace generates all the configuration files neeeded by ZMap and it is possible to re-use these files and operate ZMap outside of the Otterlace context.   In ths case the session will be the same except for a) the ability to create or edit annotation and b) some popup windows will contain less information.
</p>
<p>It is also possible to run ZMap by providing your own data in GFF2 format and providing the configuration files yourself.
</p>
<p> The first option will retrieve data from the same sources online as when running Otterlace and the second from data files or from sources defined by yourself.

<h3>Installation</h3>
<p>To install ZMap you should work through the normal process for open source software
<ul>
<li> Obtain the distribution archive (eg zmap-0-1-97.tar.gz)
<li> Unzip the source and build as normal
<pre>
> tar -zvzf zmap-0-1-97.tar.gz
> cd zmap-0-1-97
> ./configure [args]
> make
> make install
</pre>
</ul>
<b>NOTE</b> that it is assumed that certain packages are already available such as GTK, GLib, Pango, Cairo, G2.</p>
<p>On Sanger Linux PCs you should run the configure command like this:
<pre>
#!/bin/bash
> export PKG_CONFIG_PATH=/software/acedb/gtk/lib/pkgconfig
>./configure CFLAGS="-I/software/acedb/gtk/include"
      CPPFLAGS="-I/software/acedb/gtk/include"
      LDFLAGS="-L/software/acedb/gtk/lib"
      --prefix=/software/acedb
</pre>
and an a Sanger Mac like this:
<pre>
./configure CFLAGS="-I/opt/local/include"
      CPPFLAGS="-I/opt/local/include"
      LDFLAGS="-L/opt/local/lib"
      v--prefix=--prefix=/opt/local

</pre>
The above assumes you have write permission in the install directories and you can install locally with (for example):
<pre>
./configure [args] --prefix=`pwd`
</pre>
from your source directory.
</p>

<a name="user"></a><h3>User Dcoumentation</h3>
<p>This is available in the ZMap source tree under doc/user_doc.
Please refer to <a href="user_doc/styles.shtml">Styles</a> and <a href="user_doc/configuration.shtml"> Configuration</a> for details of specific configuration files and options.
</p>
</fieldset>

<a name="cloning"></a>
<fieldset><legend>Cloning an Otterlace ZMap configuration</legend>

<p>To re-create a ZMap session from an existing Otterlace session follow these simple steps:
<ul>
<li> run Otterlace and request all the data (columns) that you wish to use in your standalone Zmap session.
<li> make a note of the sequence name (which can be found on the ZMap title bar and also the top left hand corner of the sequence window, underneath the status bar).
<li> while the ZMap session is still active copy the files <code>ZMap</code> and <code>styles.ini</code> to your run-time directory.  These can be found under /var/tmp - there will be a directory named something like <code>lace_53.30006.ro.1</code>.  In this directory there will be a <code>ZMap</code> directory which contains these files.
<li> edit the <code>ZMap</code> configuration file as detailed <a href="user_doc/standalone.shtml#zmap_conf">below</a>.
<li> run ZMap with a command line argument that specifies your directory:
<pre>
> ZMap --conf_dir=~/my_ZMap_runtime_directory
</pre>
</ul>
</p>
<a name="zmap_conf"></a>
<h3>Editing the ZMap configuration file - session options</h3>
<p>Please refer to <a href="user_doc/configuration.shtml">Configuration</a> for a detailed explanation of available options.
</p>
<h4>[ZMap] stanza</h4>
<p>Compared to a normal live session with Otterlace there are two things that must be changed:
<ul>
<li> show_main_window = true
<li> default-sequence = sequence_name  This name is typically a description of the sequence region followed by some start and end coordinates, for example <b>chr4-04_128768-160647</b> and is as appears on the ZMap title bar.
</ul></p>

<h4>Editing data source selection</h4>
<p>The <code>ZMap</code> configuration file will contain data source definitions for each column that is available to the Otterlace session whether actually loaded or not.   Those that are not loaded will include an option:
<pre>
delayed=true
</pre>
and the column may be removed by setting this to false or commenting out the option and restarting ZMap.
(In a subsequent release this will be available via the Columns popup in ZMap)
</p>
<p>Data sources must be listed in the [ZMap] stanza sources command and also defined in a stanza of the same name in this file.
</p>

<h3>Access to data servers</h3>
<h4>Pipe data servers</h4>
<p>The above assumes that the Otterlace session requests data via external <a href="user_doc/configuration.shtml#source">pipe</a> data servers and these must be available to your standalone session.  If run from the same environment (ie without running Otterlace) then this is almost certainly true and the data will be requested as normal.
</p>


<h4>ACEDB data server</h4>
<p>Some data in Otterlace sessions is provided by ACEDB and is currently not available elsewhere (for example GF_splice) and if it is required to access this data outside of the Otterlace context but using live data it is necessary to set up an ACEDB instance and run this before starting ZMap.
</p>

</fieldset>

<fieldset><legend>Running ZMap using GFF files only</legend>
<p>True standalone operation can be achieved by accessing feature data from GFF files stored locally on disc.  Currently GFF2 is supported but GFF3 will be available in the near future.
</p>

<h3>Obtaining GFF data files</h3>
<p>It is possible to store the data from a live ZMap session (eg running under Otterlace) in GFF files which can later be used in a standalone session. This can be done by right-clicking on the features display and selecting 'Export' and then 'Features' and this will create a file containing all the feature data on display with the exception of the DNA sequence.
</p>
<p>DNA sequence data can be saved by selecting 'Export' and then 'DNA' but currently there is no mechanism for ZMap to read in this data.
</p>
<p>All the data is stored in one file.  This is much less effort in terms of configuration and assuming you wish to view all the data in your standalone session will operate more efficiently than splitting the data into several files (eg one per column).  (In a live session ZMap will request data from several different sources concurrently and this results in a shorter loading time, but with file access would be slower due to increased disc head movement).
</p>
<p><b>NOTE</b>:Currently it is not possible to load files after startup and therefore at present there is no benefit of having several data files, but it is expected that this feature will be implemented in the near future.
</p>

<h4>ACEDB data via GFF files</h4>
<p>Exporting feature data from a ZMap session as above will provide all the features supplied by ACEDB but some extra configuration may be required to access this in ZMap.
</p>
<p>ACEDB mas a more complex model underlying some of the featuresets defined in a typical ZMap server stanza - one featureset may refer to several and some of these may be mapped to style definitions with a different name (the default is for a feature to be displayed using a style of the same name).  When using an ACEDB server these mappings are provided by ACEDB and the ZMap works transparently but if ACEDB is replaced by a GFF file then these mappings are not included and it is necessary to provide these in the <code>ZMap</code> config file, using the stanzas <code>[columns]</code> and <code>[featureset-style]</code>
</p>
<p>Unfortunately there is currently no easy way to extract this information using ZMap and it may be necessary to inspect the file <code>zmap.log</code> to discover any ommissions.
</p>


<h3>Configuring file data access</h3>
<p>In the <code>ZMap</code> configuration file you must define a server for each file that you wish to read.  Please refer to <a href="user_doc/configuration.shtml#source"></a> for details of all configuration option for data servers, but for convenience an example is given below.
</p>
<p>Assuming that you have a ZMap runtime directory and a data directory within that then you could set up the ZMap configuration as follows (with other options and stanzas as in a cloned configuration):
<pre>
[ZMap]
show-main-window=true
default-sequence=chr4-04_128768-160647
sources = chr4-04_128768-160647

[chr4-04_128768-160647]
url=file:///data/chr4-04_128768-160647.gff
stylesfile = styles.ini
featuresets = NonGolden ; Genomic_canonical ; Gap ; marker ; OTF_X ... etc
</pre>
With the actual choice of sequence and feature sets depending on your own session.  As above in <a href="user_doc/standalone.shtml#cloning">Cloning an Otterlace ZMap configuration</a> it is much easier to copy this data from an existing configuration file than to enter it by hand.  Note that each data source must be given a stylesfile= option.
</p>
<p>
Note that the url syntax in the example above specifies a file relative to the ZMap's current directory and if you want to specify an absolute path you need four '<code>/</code>' characters after the <code>file:</code>.
</p>
<h4>Specifying a default data directory</h4>
<p>If your data files are stored elsewhere you can specify a directory for ZMap to search for relative pathnames with a command in the main config stanza:
<pre>
[ZMap]
data-dir=/home/my_name/ZMap/data
</pre>
</p>

<p>Column layout and other display options can be adjusted as defined in <a href="user_doc/standalone.shtml#user">User Documentation</a> above.
</p>

</fieldset>



