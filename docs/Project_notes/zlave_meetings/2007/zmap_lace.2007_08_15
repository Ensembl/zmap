==============================================================================
ZMap/Otterlace Development


Date:  Wednesday 15th August 2007

Attendees: jgrg, lw2, edgrif, te3


1) otterlace + zmap progress
============================

High priority
-------------


0/ ZMap performance

The only issue here is caused by the huge numbers of homologies. There is much
confusion here as there are several confounding factors:

- slow machines

- slow network meaning slow startup/perceived time

- otter pipeline problems meaning that vast numbers of useless homologies
sometimes get through

- bumping is adversely affected by duplicated regions, current algorithm tries
to join up the regions, EG to deal with this.

I plan to do some profiling/statistics to get some facts/figures.

I have a couple of plans to deal with issues such as repeated regions which 
create problems for my bumping algorithm.



1/ New zmap styles *************

edgrif has now implemented this (with inheritance), jgrg needs
to decide when to do the big swop.



Medium priority
---------------

1/ DNA finder - Needs to show its find results location on the zmap as in
fmap, would be nice to be colour coded depending on the strand. The finder
needs to be extended to also do protein searches.  Searching should be
restricted to any marked region is one is set, edgrif to do this.

edgrif is implementing protein search now, location results to come (note that
currently the user is shown a list of all hits and clicking on a hit takes
the user to that hit).


2/ There was a discussion about good ways to interact with
alignments/transcripts for deletion and other actions. Leo and James have
already worked out a lot of this with Leos transcript viewer. edgrif will get
the rules from Leo and James and then we can discuss them and decide which to
implement.


3/ Annotation needs to have a history across assembly changes.

kj2  requested that  when an  assembly changes  the objects  which get
transferred  should have a  history as  to what  they were  (otter id)
previously.  lw2 remarked that it's  possible to search for the old id
in the lace  interface, but impossible to retrieve  the old object and
display it.  jgrg  acknowledged there is a bug  in the lace searching,
but  that   providing  the   history  would  be   difficult.   Further
discussion/thought on how to implement this is needed.



Low priority
------------

1/ jgrg suggested that short cuts should be given on menus/mouse-over popups
to remind the user that they exist...edgrif to do this.


2/ alternative translations: edgrif about half way through code to do this.

edgrif is doing this as part of the protein search code since this code
does translations itself. edgrif will talk to jgrg about how alternative
genetic codes can be specified with acedb.


3/ we need a "back" button, the new zoom functions make this a lower priority
than before.

4/ There was a discussion about how much a user should be able to
configure. It was agreed that they should be able to configure which columns
are initially hidden. They should also be able to "save" the current settings
to set this up and to be able to restore the system or there currently saved
defaults.

edgrif or rds will do this.
nothing  done, but  it  was  noted that  NO  enduser configuration  of
colours should be possible!




A new canvas
------------

rds has been looking at alternative canvas implementations which offer an MVC
model. He has managed to get goocanvas developers to fix some bugs and make
some changes to support our needs.

the goocanvas MVC model will mean we do not have to copy data to split windows
meaning greatly reduced memory usage.

the goocanvas will cope automatically with the X Windows window size limit, this
combined with changes in the gtk scrolling model means we will be able to do away
with having two scroll bars.

We plan to introduce this in the Autumn.



Multiple alignments
-------------------

multiple alignments: edgrif is about a third of the way through implementing a
more general way of displaying arbitrary blocks.  This will become a high
priority item as we move to haplotypes etc.




Changing the Assembly
---------------------

th made the good but frightening point that the world of annotation has
changed to one where the annotator may well be making changes to the
underlying assembly, he said that ensembl supports this and lace/zmap will
need to. The consequences feel alarming.....

edgrif and rds to think about this: would it mean that zmap would have to
change the position of features on the fly as the user edits the
assembly...some tricky pathological cases here....

We will need smapping support in zmap to do this kind of thing. edgrif has
a plan for extracting the smap code from acedb and making it a stand alone
package.



Builds
------

We now have a properly networked Mac, we need to include universal binaries.
jgrg, edgrif & rds to work on this.


Blixem/pfetch
--------------

- blixem: dna searching is NOT DONE, edgrif to expedite. Also protein searches
will be added.




2) Other matters
================

kj2 raised a question about how alignments were done for otter, jgrg said
using BLAST and est2genome. Kerstin said that much more useful alignments
could be made using BLAT or exonerate or ??? In particular, other alignment
methods join up their matches where they are obviously "perfect" overall
alignments (e.g. to consecutive exons) and cope with alignments where they go
over clone boundaries.

Mustapha is working on this.



3) Next Meeting
===============

Will be at 2pm, 29th August 2007


==============================================================================
