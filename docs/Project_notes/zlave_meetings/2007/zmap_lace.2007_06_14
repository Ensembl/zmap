==============================================================================
ZMap/lace sub-meeting 

14/06/2007

jgrg, rds, edgrif


1) ZMap <-> lace communication

We need to check that lace and zmap behave correctly when either
quits in a controlled way. This is vital if annotators are to be
able to restart zmap from lace in a controlled way.

Ed/Roy have done quite a lot of work on zmap to ensure that it sends
commands in the correct way to clear up.

James to check that lace also clears up correctly.

Roy has done a lot of work to improve the xremote codes handling and
tracking of its own state.

NOTE that we still have a hole in that we don't have a good way for
lace to "notice" that zmap has died unexpectedly.

lace does not support the "single_select" request from zmap, nor
does it make "single_select" requests to zmap. This needs doing to
support feature highlighting.


2) otterids
 
Display of otterids is still outstanding and is essential. The
current plan is for this to happen in lace, not in zmap (although
with the new tagvalue display the otterid can be displayed in zmap
as well).


3) TagValue display

Ed has been working on this and its now complete. The data is displayed
in the usual "notebook" or "tabbed" style window. Some of the data
comes directly from zmap and some of it can come from lace.

When the user selects the feature menu "Show Feature Details" item,
zmap sends an xremote request to lace for extra feature details. lace
can then return information as xml in the form of pages containing
paragraphs containing tagvalues in a number of formats.

lace will need to support the new "feature_details" request and
reply with data in the form:

<zmap>
   <response>
      <notebook>
         <page name="NNN">
            <paragraph name="NNN" type="TTT">
               <tagvalue name="NNN" type="TTT">
                  The contents of first tag
               </tagvalue>
            </paragraph>
         </page>
      </notebook>
   </response>
</zmap>


The page, paragraph and tagvalue elements can be repeated as often as
required but must be nested as above.


Page element:

The "name" attribute is compulsory.


Paragraph element:

The "name" attribute is optional.

The type attribute must be one of:

"simple"             tagvalues will be a simple vertical list.
"tagvalue_table"     tagvalues will be aligned in a table.
"homogenous"         as for "tagvalue_table" but all tagvalues should
                     have the same tag which will only be displayed once.
(default is "simple")

Tagvalue element:

The "name" attribute is compulsory.

The type attribute must be one of:

"simple"             the value is displayed in a single line text widget
"scrolled_text"      the value is displayed in a multiline/scrolled window
(default is "simple")

The content fo the tagvalue must be text.



4) New styles

Code is all waiting, we just need to do the big switch.



5) Mac builds

Both Roy and Ed have worked on the build system to make it easier/quicker
to do mac builds. Currently we are waiting to get GTK 2.10 installed on
our iMac and then the build should be automated.



6) The plan

James is to get a "test otterlace" system of some sort going before his
C++ course next week so Roy and Ed can try the latest zmap out with a
couple of annotators.

Ed is to finish the tagvalue code.

After the C++ course James, Ed and Roy will tie up all the current loose
ends that are preventing annotators from using zmap.
