#!/bin/bash
#
# Create the symbolic links in ~zmap to point to the various releases of zmap.
#



#
# main routine
#

# set up common functions.
. ZBfunctions $0


# set up usage strings.
cmdstring='[-o] [-d] [-r] <source_directory>'
descstring='
  -o  link ~zmap/BUILD.OVERNIGHT to source_directory (default)

  -d  link ~zmap/BUILD.DEVELOPMENT to source_directory (default)

  -r  link ~zmap/BUILD.RELEASE to source_directory (default)'


linksroot=~zmap

prefix='ZMap'
suffix='BUILD'
overnight=$prefix'.OVERNIGHT.'$suffix
development=$prefix'.DEVELOPMENT.'$suffix
release=$prefix'.RELEASE.'$suffix
links=""

while getopts ":odr" opt ; do
  case $opt in
    o  ) links="$links $overnight"  ;;
    d  ) links="$links $development" ;;
    r  ) links="$links $release" ;;
    \? ) ZBusage "$cmdstring" "$descstring" "Bad command line flag"

  esac
done

# Get the source directory to be linked to.
shift $(($OPTIND - 1))
if [ -z "$1" ] ; then
  ZBusage "$cmdstring" "$descstring" "No link source directory specified."
fi
sourcedir=$1


# default to overnight link...
if [ -z "$links" ] ; then
  links=$overnight
fi


# move to ~zmap where we will make the symbolic links.
#
ZBGotoDir $linksroot



# Make sure the source dir exists.
#
if [ ! -d $sourcedir ] ; then
  ZBmsgAndExit "Cannot find source directory for link: $sourcedir"
fi


for dir in $links
do
  if [ -L $dir ] ; then
    rm -f $dir || ZBmsgAndExit "Cannot remove symbolic link: $linksroot/$dir"
  fi

  ln -s $sourcedir $dir || ZBmsgAndExit "Cannot make symbolic link: $linksroot/$dir"

done


exit 0

