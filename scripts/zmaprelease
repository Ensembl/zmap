#!/usr/local/bin/bash
#
# Make a release directory and put into it all the required binaries for a zmap/acedb
# release. This script is a bit brain dead so don't expect too much. In particular
# it expects there to already be ~zmap/prefix/XXXX/bin directories containing binaries
# for different machines.
#


#
# main routine
#

# set up common functions.
. ZBfunctions $0


# set up usage strings.
cmdstring='[-a | -l | -m] [target_directory]'
descstring='
   -a   just copy Alpha binaries.

   -l   just copy Linux binaries.

   -m   just copy Mac binaries.

   [target_build_directory] 
        specifies target directory for binaries, defaults to "ZMap_V.R.U"'


zmap_dir=~zmap
machines='ALPHA LINUX'
prefix_dir=$zmap_dir/prefix

acedb_binaries='tace xace sgifaceserver makeUserPasswd blixem dotter'
zmap_binaries='zmap'
binaries="$acedb_binaries $zmap_binaries"



while getopts ":alm" opt ; do
  case $opt in
    a  ) machines='ALPHA'    ;;
    l  ) machines='LINUX'    ;;
    m  ) machines='MACOSX'   ;;
    \? ) ZBusage "$cmdstring" "$descstring" "invalid option"
  esac
done


# Get a target directory...if there is one...
shift $(($OPTIND - 1))
if [ "$1" ] ; then
  build_dir=$1
else
  version=`zmap --version`
  set $version
  build_dir=$1_$3
fi


# Make the build directory, bomb out if if already exists....
#
if [ -d $build_dir ] ; then
  ZBmsgAndExit "Cannot continue, $build_dir already exists."
else
  mkdir $build_dir || ZBmsgAndExit "Cannot make release directory: $build_dir"

  ZBGotoDir $build_dir

  for i in $machines
    do
      mkdir $i || ZBmsgAndExit "Cannot make binary directory: $i"
      bin_dir=$prefix_dir/$i/bin

      for j in $binaries
        do
          cp $bin_dir/$j $i || ZBmsgAndExit "Cannot copy file $bin_dir/$j to $i"
        done

    done
fi



exit 0

