#!/usr/local/bin/bash
#
# Cribbed from systems who use it to look at tickets.
#
# The rt application is in /software/bin currently.
#
#
#



SCRIPT_NAME=$(basename $0)

zmap_host_name=$(hostname)



RT_BIN='/software/bin/rt'


usage=" $0 <date> <list of queues>

    date is in the format dd/mm/yyyy

    queues should be a blank separated list of valid RT queues.
"




# Make a prefix.
# Usage your_var=$(zmap_make_prefix) 
function zmap_make_prefix
{
    now=$(date +%H:%M:%S)

    $ECHO "[$zmap_host_name $SCRIPT_NAME ($now)] $@"
}



# Usage: zmap_message_out Your Message
function zmap_message_out
{
    $ECHO "$(zmap_make_prefix) $@"
}


# Usage: zmap_message_err Your Message
function zmap_message_err
{
    $ECHO "$(zmap_make_prefix) $@" >&2
}

# Usage: zmap_message_exit Your Message
function zmap_message_exit
{
    zmap_message_err "$@"
    exit 1;
}




[ "x$start_date" != "x" ] || start_date=$1

if [ -z "$start_date" ] ; then
  zmap_message_exit $usage
fi

shift

# A list of blank separated queues is allowed.
[ "x$OPS_QUEUES" != "x" ] || OPS_QUEUES="$*"
if  [ -z "$OPS_QUEUES" ] ; then
  zmap_message_exit $usage
fi


zmap_message_out "Starting to fetch RT tickets for start date $start_date on queues $OPS_QUEUES"


#echo "STarting first query of RT...gets the ticket numbers"

SingleQueue () {
for QUEUE in $*
do

# a good way to work out what the params should look like is to try them out in web search interface.
#
# queries can be very complex:
#
#echo -n -e `rt-3.4 search -i  "(Queue = '$QUEUE') and  ( status='open' or status='new') and created > '-1 week'"`

echo -n -e `$RT_BIN search -i "(Queue = '$QUEUE') and  (status = 'resolved') and resolved > '$start_date'"`
echo

done
}


#echo "STarting second query of RT...displays the tickets"

#echo "Queues = $OPS_QUEUES"


for TICKET in `SingleQueue $OPS_QUEUES` 
do

#echo $TICKET

# You can add stuff to the -f flag like Created and so on.
$RT_BIN show -t ticket -f Queue,Subject,Requestors,Owner,Resolved $TICKET

echo

done

zmap_message_out "Finished fetching RT tickets."

exit 0
