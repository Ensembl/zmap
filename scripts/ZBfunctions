#!/bin/echo Run as '. ZBfunctions unset' Or '. ZBfunctions <build script>' Note the DOT, see usage at top of file.
#
# Sets up general functions needed by all ZMap build scripts, these
# general functions have the prefix "ZB" for Zmap Build.
#
# Should be run as a dot script as the first statement executed in all
# build scripts, $0 should be given as the single arg so the script name
# can be included in messages: 
#                                . ZBfunctions $0
#
# to unset the functions call like this:
#
#                                . ZBfunctions unset
#
# Note that this will pick up the first ZBfunctions on your path which should
# be the same as your script versions, if you don't like this then give some
# kind of more restrictive directory spec.
#

ZBbuildOSDir=""
ZBHostname=`hostname`
ZBDebug=""

if [ "$1" = "unset" ]; then

    # UNSET the functions used
    unset ZBmsgAndExit ZBmsgInfo
elif [ "x$1" = "x" ]; then
   ./ZBfunctions
else

if [ "x$ZBDebug" = "xtrue" ]; then
  set -x
fi

ZBExportOSVars()
{
    opsys=`uname`

    case $opsys in

        OSF1 )
            ZBbuildOSDir=build/alpha ;;
        Linux )
            ZBbuildOSDir=build/linux ;;
        Darwin )
            ZBbuildOSDir=build/macosx ;;
        * )
            ZBmsgAndExit "unsupported operating system: $opsys" ;;       
    esac
}

ZBGotoDir ()
{

  cd $1 || ZBmsgAndExit "Cannot cd to ZMap build directory: $1"

}

# If the global variable ZMmailOnExit is set then the error message is sent
# to the zmap developers before exitting.
ZBmsgAndExit ()
{
  errmsg="$ZBscript ($ZBHostname) - Fatal Error: $1"

  if [ -n "$ZBmailOnExit" ]
  then
    ZBmsgMail "$errmsg" 'Failed'
  fi

  echo "$errmsg"

  exit 1
}


ZBmsgInfo ()
{
  msg="$ZBscript ($ZBHostname) - Info: $1"

  if [ -n "$ZBmailOnExit" ]
  then
    ZBmsgMail "$msg" 'OK'
  fi

  echo "$msg"
}


# Function requires two arguments:
#
#    ZBmsgMail "error message" 'mail subject suffix'
#
#    ZBmsgMail "Rubbish coding by Ed" 'OK'
#
# mailx is used because there are complications on the Alphas with what
# flags are supported by the basic mail program.
#
ZBmsgMail ()
{
    echo "Build Message:
  
$1" | mailx -s "ZMap Build - $2" zmap

}


ZBlogmsg ()
{
  echo
  echo "----- $ZBscript ($ZBHostname `date`): $1 -----"
  echo
}


ZBusage ()
{
  if [ -n "$3" ]
  then
    echo
    echo "Warning: $3"
  fi

  echo
  echo "Usage:   $ZBscript $1"
  echo
  echo "$2"
  echo

  exit 1
}


# all variables must be after functions...
#
ZBscript=`basename $1`

# For some reason this doesn't work, the variables don't get passed on....
# do they need to be exported....probably, even though this is a dot script ????
# TRY OUT LATER...

# Yes, that's it the variables need to be exported....
export ZBacedb='/nfs/disk100/acedb'
ZBBaseDir="$ZBacedb/ZMap"
ZBOverDir="$ZBacedb/ZMap.OVERNIGHT.BUILD"
ZBDevDir="$ZBacedb/ZMap.DEVELOPMENT.BUILD"



fi


#
# do NOT exit from this, it is run as a dot script by other shell scripts.
#
