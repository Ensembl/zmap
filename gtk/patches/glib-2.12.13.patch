--- configure.original	2008-11-04 09:14:48.000000000 +0000
+++ configure	2008-11-04 09:16:11.000000000 +0000
@@ -31219,7 +31219,9 @@
   yes)
 
 cat >>confdefs.h <<\_ACEOF
+#ifdef __ppc__
 #define WORDS_BIGENDIAN 1
+#endif
 _ACEOF
  ;;
   no)
@@ -39989,7 +39991,11 @@
 echo "${ECHO_T}$glib_cv_byte_contents_gmutex" >&6; }
 
 cat >>confdefs.h <<_ACEOF
-#define GLIB_BYTE_CONTENTS_GMUTEX $glib_cv_byte_contents_gmutex
+#ifdef __ppc__
+#define GLIB_BYTE_CONTENTS_GMUTEX 50,-86,-85,-89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+#else
+#define GLIB_BYTE_CONTENTS_GMUTEX -89,-85,-86,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
+#endif
 _ACEOF
 
 
@@ -45512,10 +45518,13 @@
 _______EOF
 	fi
 
-	case x$g_stack_grows in
-	xyes) echo "#define G_HAVE_GROWING_STACK 1" >>$outfile ;;
-	*)    echo "#define G_HAVE_GROWING_STACK 0" >>$outfile ;;
-	esac
+	cat >>$outfile <<_______EOF
+#ifdef __ppc__
+#define G_HAVE_GROWING_STACK 1
+#else
+#define G_HAVE_GROWING_STACK 0
+#endif
+_______EOF
 
 
 	echo >>$outfile
@@ -45564,7 +45573,12 @@
     long   dummy_long;
   } static_mutex;
 };
-#define	G_STATIC_MUTEX_INIT	{ NULL, { { $g_mutex_contents} } }
+#ifdef __ppc__
+#define G_STATIC_MUTEX_INIT     { NULL, { { 50,-86,-85,-89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} } }
+#else           
+#define G_STATIC_MUTEX_INIT     { NULL, { { -89,-85,-86,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0} } }
+#endif
+
 #define	g_static_mutex_get_mutex(mutex) \\
   (g_thread_use_default_impl ? ((GMutex*) ((mutex)->static_mutex.pad)) : \\
    g_static_mutex_get_mutex_impl_shortcut (&((mutex)->runtime_mutex)))
@@ -45593,24 +45607,39 @@
   void  *dummy_pointer;
   long   dummy_long;
 };
-_______EOF
-	if test x"$g_memory_barrier_needed" != xno; then
-	  echo >>$outfile
-	  echo "#define G_ATOMIC_OP_MEMORY_BARRIER_NEEDED 1" >>$outfile
-	fi
+#ifdef __ppc__
+#define G_ATOMIC_OP_MEMORY_BARRIER_NEEDED 1
+#define GINT16_TO_BE(val)	((gint16) (val))
+#define GUINT16_TO_BE(val)	((guint16) (val))
+#define GINT16_TO_LE(val)	((gint16) GUINT16_SWAP_LE_BE (val))
+#define GUINT16_TO_LE(val)	(GUINT16_SWAP_LE_BE (val))
+#define GINT32_TO_BE(val)	((gint32) (val))
+#define GUINT32_TO_BE(val)	((guint32) (val))
+#define GINT32_TO_LE(val)	((gint32) GUINT32_SWAP_LE_BE (val))
+#define GUINT32_TO_LE(val)	(GUINT32_SWAP_LE_BE (val))
+#define GINT64_TO_BE(val)	((gint64) (val))
+#define GUINT64_TO_BE(val)	((guint64) (val))
+#define GINT64_TO_LE(val)	((gint64) GUINT64_SWAP_LE_BE (val))
+#define GUINT64_TO_LE(val)	(GUINT64_SWAP_LE_BE (val))
+
+#else
+
+#define GINT16_TO_LE(val)	((gint16) (val))
+#define GUINT16_TO_LE(val)	((guint16) (val))
+#define GINT16_TO_BE(val)	((gint16) GUINT16_SWAP_LE_BE (val))
+#define GUINT16_TO_BE(val)	(GUINT16_SWAP_LE_BE (val))
+#define GINT32_TO_LE(val)	((gint32) (val))
+#define GUINT32_TO_LE(val)	((guint32) (val))
+#define GINT32_TO_BE(val)	((gint32) GUINT32_SWAP_LE_BE (val))
+#define GUINT32_TO_BE(val)	(GUINT32_SWAP_LE_BE (val))
+#define GINT64_TO_LE(val)	((gint64) (val))
+#define GUINT64_TO_LE(val)	((guint64) (val))
+#define GINT64_TO_BE(val)	((gint64) GUINT64_SWAP_LE_BE (val))
+#define GUINT64_TO_BE(val)	(GUINT64_SWAP_LE_BE (val))
+
+#endif
 
-	echo >>$outfile
-	g_bit_sizes="16 32 64"
-	for bits in $g_bit_sizes; do
-	  cat >>$outfile <<_______EOF
-#define GINT${bits}_TO_${g_bs_native}(val)	((gint${bits}) (val))
-#define GUINT${bits}_TO_${g_bs_native}(val)	((guint${bits}) (val))
-#define GINT${bits}_TO_${g_bs_alien}(val)	((gint${bits}) GUINT${bits}_SWAP_LE_BE (val))
-#define GUINT${bits}_TO_${g_bs_alien}(val)	(GUINT${bits}_SWAP_LE_BE (val))
-_______EOF
-	done
 
-	cat >>$outfile <<_______EOF
 #define GLONG_TO_LE(val)	((glong) GINT${glongbits}_TO_LE (val))
 #define GULONG_TO_LE(val)	((gulong) GUINT${glongbits}_TO_LE (val))
 #define GLONG_TO_BE(val)	((glong) GINT${glongbits}_TO_BE (val))
@@ -45619,7 +45648,11 @@
 #define GUINT_TO_LE(val)	((guint) GUINT${gintbits}_TO_LE (val))
 #define GINT_TO_BE(val)		((gint) GINT${gintbits}_TO_BE (val))
 #define GUINT_TO_BE(val)	((guint) GUINT${gintbits}_TO_BE (val))
-#define G_BYTE_ORDER $g_byte_order
+#ifdef __ppc__
+#define G_BYTE_ORDER G_BIG_ENDIAN
+#else
+#define G_BYTE_ORDER G_LITTLE_ENDIAN
+#endif
 
 #define GLIB_SYSDEF_POLLIN =$g_pollin
 #define GLIB_SYSDEF_POLLOUT =$g_pollout
