<!--#set var="banner" value="Configuration Files for ZMap"-->
<!--#include virtual="/perl/header"-->

<!--#set var="author" value="edgrif@sanger.ac.uk" -->

<style>
pre{ width: 95%; background-color: #DDDDDD; border-style: solid; border-width: 1px; padding: 10px }
.example{ border-color: #000000 }
div.spacer { clear: both; }
div.stanza { clear: both; padding-top: 5px; }
div.stanza div.opt  { float: left; width: 15%; text-align: left; font-weight: bold; }
div.stanza div.desc { float: right; width: 85%; text-align: left; } 
</style>






<fieldset> <legend>Overview</legend>

<p>
ZMap configuration is via command line options and a number of resource files
read during intitialisation and during subsequent processing.
This section describes the various ways ZMap can be configured.
</p>

</fieldset><br />


<fieldset>
<legend id="commandline">Command Line Options</legend>

<p>
ZMap recognises command line options starting with double dashes:
</p>

<pre id="usage" class="example">
Usage:
  zmap [OPTION...] <sequence name>

A multi-threaded genome browser and annotation tool.

Help Options:
  -?, --help                Show help options

Application Options:
  --version=<none>          Program version.
  --start=coord             Start coord in sequence, must be in range 1 -> seq_length.
  --end=coord               End coord in sequence, must be in range start -> seq_length, but end == 0 means show to end of sequence.
  --conf_file=file path     Relative or full path to configuration file.
  --conf_dir=directory      Relative or full path to configuration directory.
  --win_id=0x0000000        Window ID of the controlling application.
</pre>

</fieldset><br />







<fieldset>
<legend>Configuration Files - Format</legend>

<p>
The format of the configuration files follows a stanza-based key-value format
defined in the <a href="http://library.gnome.org/devel/glib/stable/glib-Key-value-file-parser.html">
GLib Key-value parser</a> package, e.g.
</p>

<pre class="example">
# this is a comment.

[StanzaName]
# another comment.
property = value                           # string
numeric = 1.0                              # float
number = 32000                             # int
truth = true                               # boolean
list = one ; two ; three ; four            # multiple strings

[Next Stanza]

<i>etc.</i>

</pre>

<p>
A longer annotated example can see seen <a href="config_file_examples.shtml">here</a>.
</p>


</fieldset><br />


<fieldset>
<legend id="sectionfiles">Directories and Files</legend>

<p>
ZMap uses configuration files to find its servers, files and
to configure aspects of its interface.
By default ZMap looks for these files in the users <code><b>$HOME/.ZMap</b></code> directory.
The  user can specify an alternative directory using the
<a href="#commandline">--conf_dir</a> option.
</p>

<p>
If the configuration directory does not exist then ZMap will not run.
</p>


<h4 id="stylefile">ZMap configuration file</h4>

<p>
By default the <code><b>ZMap</b></code> configuration file is searched for
in the configuration directory but an alternative file can be specified with
the <a href="#commandline">--conf_file</a> option.
If this file does not exist ZMap will not run.
</p>


<h4 id="stylefile">Style configuration file</h4>

<p>This  file should  be located in the
configuration directory and named according to the value  of the
stylesfile option in the <a href="#stanzas">source</a> stanza of
the <code><b>ZMap</b></code> configuration file.</p>

</fieldset><br />


<fieldset>
<legend id="stanzas">ZMap Configuration File Stanzas</legend>


<!-- Notes about connecting to doxygen generated html files.

Our doxygen documentation generator creates html files from the C source
header files which document the configuration information.

The resulting html files are named in the following way:

In the source file we have:

/*! @addtogroup config_stanzas
 *
etc....

from this doxygen generates an html file called:

group__config__stanzas.shtml

I can't see a way to tell doxygen what name to call the file so it's just hard
coded here.....

These files are all in an "html" subdirectory at the same level as the directory
containing these files.

-->

<p>
The following stanzas are supported by ZMap:
</p>

<ul>
  <li><b><a href="../html/group__config__stanzas.shtml#app">ZMap</a> -</b>
      main configuration stanza controlling the zmap application.
  <li><b><a href="../html/group__config__stanzas.shtml#view">View</a> -</b>
      stanza(s) controlling display of a named set of features.
  <li><b><a href="../html/group__config__stanzas.shtml#source">Source</a> -</b>
      stanza(s) specifying data sources from which to load a feature view.
  <li><b><a href="../html/group__config__stanzas.shtml#style">Style</a> -</b>
      stanza(s) specifying styles for displaying feature sets.
  <li><b><a href="../html/group__config__stanzas.shtml#window">Window</a> -</b>
      stanza controlling the ZMap feature display window.
  <li><b><a href="../html/group__config__stanzas.shtml#blixem">Blixem</a> -</b>
      stanza specifying parameters for running the blixem sequence viewer.
  <li><b><a href="../html/group__config__stanzas.shtml#logging">Logging</a> -</b>
      stanza controlling zmap logging facility.
  <li><b><a href="../html/group__config__stanzas.shtml#debug">Debug</a> -</b>
      stanza controlling zmap debugging output.
</ul>


<p>describe links here between stanzas...


</fieldset><br />




<!--#include virtual="/perl/footer"-->
