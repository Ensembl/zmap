==============================================================================
ZMap/Otterlace Development


Date:  Wednesday 23rd April 2007

Attendees: jgrg, edgrif, te3, st3


1) otterlace + zmap progress
============================

High priority
-------------

1/ Can't get otterid in zmap. 

kj2 raised the point that searching zmap/lace for a otter id is a requirement.
ZFIN Requests are based on otter ids.  jgrg suggested lace is a good place to
implement this. lace knows the data best, can search for otter id and instruct
zmap to spotlight the feature.  Displaying the information in zmap depends on
the ability to show tag - value (below).


2/ Display of tag-values by zmap

edgrif, jgrg, rds and lg4 have met and agreed a plan for this. edgrif is
implementing a new version of the individual feature display code which will
do the following:

- make reuse of existing feature windows the default to avoid loads of
windows.

- make the feature display window into a "tabbed" style window to avoid the
window being too huge.

- add tag-value information that will be cut/pastable in a generalised way
that is readily extensible

An important development of this is the realisation that instead of passing
all information across via the server for every feature, zmap will ask lace
for the information for the individual feature. This is more flexible and
avoids excessive amounts of data being passed across when zmap starts up.


The following are all candidates to be displayed:

- Halfwise hits (rds asked if they have a URL object.  lw2 pointed out that a
domain description is more important than the URL as it takes time to go to
the webpage for each hit.

- kj2 would like more information available for features such as the species
and the DE lines. edgrif said they could display this via the current
mechanism of mouse-over popups in the "Info" line at the top of the ZMap. jgrg
is going to make sure this information is in the acedb objects so it can be
exported to zmap.


- Evidence does not display that it has been used with an associated object.
We need something to replace the xref of fmap which is displayable in the
treeview.  Disucssion on whether the new styles are enough followed, but
although showing evidence in the same column goes some way, an explicit link
would be better.  kj2 remarked that some method of removing the feature from
the display once it has been used as evidence, allowing the visualisation of
what's left to build objects with, could be the ideal solution.


3/ highlighting of exons/cds/dna/protein etc does not work.

rds has 2/3 of the code for this done. Some of this depends on the new zmap
styles.


4/ New zmap styles

edgrif has now implemented this (with inheritance), jgrg and edgrif need
to decide when to do the big swop.

This will fix the following problems:

Saturated_EST bug: because of some ambiguity if tag usage in acedb methods
these don't get shown in the right way. This will be properly fixed when we
have zmap styles which are completely separate from acedb methods.



Medium priority
---------------

1/ DNA finder - Needs to show its find results location on the zmap as in
fmap, would be nice to be colour coded depending on the strand. The finder
needs to be extended to also do protein searches.  Searching should be
restricted to any marked region is one is set, edgrif to do this.

edgrif is implementing protein search now, location results to come (note that
currently the user is shown a list of all hits and clicking on a hit takes
the user to that hit).


2/ zmap needs to get sequences that are in acedb from there for blixem, means
issuing a call to the server to get them but this is possible. NOTE that some
sequences are _only_ in acedb.


3/ There was a discussion about how much a user should be able to
configure. It was agreed that they should be able to configure which columns
are initially hidden. They should also be able to "save" the current settings
to set this up and to be able to restore the system or there currently saved
defaults.

edgrif or rds will do this.
nothing  done, but  it  was  noted that  NO  enduser configuration  of
colours should be possible!

4/ There was a discussion about good ways to interact with
alignments/transcripts for deletion and other actions. Leo and James have
already worked out a lot of this with Leos transcript viewer. edgrif will get
the rules from Leo and James and then we can discuss them and decide which to
implement.


5/ Annotation needs to have a history across assembly changes.

kj2  requested that  when an  assembly changes  the objects  which get
transferred  should have a  history as  to what  they were  (otter id)
previously.  lw2 remarked that it's  possible to search for the old id
in the lace  interface, but impossible to retrieve  the old object and
display it.  jgrg  acknowledged there is a bug  in the lace searching,
but  that   providing  the   history  would  be   difficult.   Further
discussion/thought on how to implement this is needed.


Low priority
------------

1/ jgrg suggested that short cuts should be given on menus/mouse-over popups
to remind the user that they exist...edgrif to do this.


2/ cannot currently cursor through features in a column, there are some
technical problems here to do with raising items so they are visible.


3/ alternative translations: edgrif about half way through code to do this.

edgrif is doing this as part of the protein search code since this code
does translations itself. edgrif will talk to jgrg about how alternative
genetic codes can be specified with acedb.


4/ we need a "back" button, the new zoom functions make this a lower priority
than before.



Mulitple alignments
-------------------

multiple alignments: edgrif is about a third of the way through implementing a
more general way of displaying arbitrary blocks.  This will become a high
priority item as we move to haplotypes etc.




Changing the Assembly
---------------------

th made the good but frightening point that the world of annotation has
changed to one where the annotator may well be making changes to the
underlying assembly, he said that ensembl supports this and lace/zmap will
need to. The consequences feel alarming.....

edgrif and rds to think about this: would it mean that zmap would have to
change the position of features on the fly as the user edits the
assembly...some tricky pathological cases here....

We will need smapping support in zmap to do this kind of thing. edgrif has
a plan for extracting the smap code from acedb and making it a stand alone
package.



Builds
------

- We now have the latest GTK (2.10) for linux and are moving to it. We need to
move to it for macs as well.


- there is still a problem that we do not have a mac on the network that can
so proper single sign on, home directories etc etc.



Blixem/pfetch
--------------

- blixem: dna searching is NOT DONE, edgrif to expedite. Also protein searches
will be added.




2) Other matters
================

Both these items are still pending:

- script for EMBL dumping: needs testing by Jen. James thinks this all
works. There was a discussion about submissions more generally and it was
agreed that all regions going into VEGA should be submitted. This let into a
request for some kind of "Clone status" flag. jgrg said there used to be one
and that it should be recreated.


kj2 raised a question about how alignments were done for otter, jgrg said
using BLAST and est2genome. Kerstin said that much more useful alignments
could be made using BLAT or exonerate or ??? In particular, other alignment
methods join up their matches where they are obviously "perfect" overall
alignments (e.g. to consecutive exons) and cope with alignments where they go
over clone boundaries.

jgrg to think about this.



3) Next Meeting
===============

Will be at 2pm, 23rd May 2007


==============================================================================
