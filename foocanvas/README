================================================================================
                     foocanvas directory
================================================================================

This directory contains the files used to construct our version of the
foocanvas. This is not straight forward because we have:

- modified the foocanvas code itself
- created our own additional files which must be added to the foocanvas code
- modified the build scripts to get our files included in the build


We have elected to do this by:

- checking out the latest copy of the foocanvas from the copy at the gnome site

- copying our files into this copy

- applying our changes to the foocanvas source and build files as a patch


Because this is not completely simple there are two scripts in this directory
to do this. These scripts MUST BE RUN from within this directory.


The scripts run as a pair:


make_working_foocanvas
----------------------
This script produces a subdirectory called FOOCANVAS-WORKING-COPY. This
subdirectory contains the latest source for foocanvas in foocanvas.latest, the
patch file to convert this copy into our version of foocanvas as
libfoocanvas-XXXXX.patch, and a merged working copy of our version of foocanvas
in foocanvas.working.  This merged version can be used both to do a build and
for making changes.

To do the build cd to foocanvas.working and type:

autogen.sh --prefix=<directory where you will want to install foocanvas>

when that has finished you can simply type 'make' and 'make install'


Alternatively if you simply want to do a build with the current patch and the
version of foocanvas that the patch was created from (stored in cvs with the
patch) then you use the -b flag:

make_working_foocanvas -b

This produces the same directory structure as before and you run autogen.sh as
before.


make_cvs_foocanvas
------------------
When you have finished altering the code you can run make_cvs_foocanvas to
prepare the files that need to go into cvs and you can optionally have them
checked back in by the script. If you decide to check them back in yourself
you should look in the script to check the -kN options that are required for
the files to go back into cvs in the correct format.

To prepare the files, check them back in to cvs and also remove the working
directory:

make_cvs_foocanvas -c"description used by script to do cvs commit" -r

and that should be it.


