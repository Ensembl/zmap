#
# common defs for all ZMap makefiles
#
#
# Our build system _requires_ these variables to have been set prior
# to the inclusion of this file:
#
# environment variables
#          ZMAP_PLATFORM, e.g. to "alpha_5"
#
# make macros:
#          ROOT_DIRECTORY set to the path to the base ZMap directory
#          MAKE_DIR set to the path to the zmapMake directory
#
#



#
# Include platform specific macros.
#
PLATFORM_PREFIX = platform.
PLATFORM_NAME = $(PLATFORM_PREFIX)$(ZMAP_PLATFORM)
PLATFORM_FILE = $(MAKE_DIR)/$(PLATFORM_NAME)

include $(PLATFORM_FILE)


BINDIR_PREFIX = bin.
BINDIR_NAME = $(BINDIR_PREFIX)$(ZMAP_PLATFORM)
BINDIR = $(ROOT_DIRECTORY)/$(BINDIR_NAME)


#
# Zmap libraries
#
# libZMapApp.a    - contains code for the standalone zmap client.
#
# libZMap.a       - contains code that is common to _all_ zmaps
#
# libZMapThr.a    - contains code that uses threads to get info. from databases.
# libZMapNoThr.a  - contains code that uses function calls to get info. from databases.
#
# Stand alone client uses      libZMapApp.a libZMap.a libZMapThr.a
#
#   library for xace uses                   libZMap.a libZMapNoThr.a
#
#
ZMAPAPP_LIBNAME = libZMapApp.a
ZMAPAPP_LIB = $(BINDIR)/$(ZMAPAPP_LIBNAME)

ZMAP_LIBNAME = libZMap.a
ZMAP_LIB = $(BINDIR)/$(ZMAP_LIBNAME)

ZMAPTHR_LIBNAME = libZMapThr.a
ZMAPTHR_LIB = $(BINDIR)/$(ZMAPTHR_LIBNAME)

ZMAPNOTHR_LIBNAME = libZMapNoThr.a
ZMAPNOTHR_LIB = $(BINDIR)/$(ZMAPNOTHR_LIBNAME)


#
# COMPILE MACROS
#

# each subdir could add any additional includes that it needs,
#
#  e.g. INCLUDE_DIRS = $(INCLUDE_DIRS) -I$(ACECONN_INCL_DIR)
#                                                for socket stuff
#
ZMAP_INCLUDE = $(ROOT_DIRECTORY)/include

GTK_INC = `$(PACKAGE_CONFIG) --cflags gtk+-2.0 glib-2.0`
GNOME_INC = `$(GNOME_CONFIG) --cflags libgnomecanvas-2.0`
#GNOME_INC =

INCLUDE_DIRS = $(GNOME_INC) $(GTK_INC) -I$(ZMAP_INCLUDE) -I. $(CURRENT_INC)

GTK_LIBS = `$(PACKAGE_CONFIG) --libs gtk+-2.0 gthread-2.0 glib-2.0`
GNOME_LIBS = `$(GNOME_CONFIG) --libs libgnomecanvas-2.0`
#GNOME_LIBS =


CURL_LIBS = `curl-config --libs`

EXPAT_LIBS = -lexpat


ALL_LIBS = $(ZMAP_LIB_FLAGS) $(ACECONN_LIB_FLAGS) $(GNOME_LIBS) $(GTK_LIBS) $(CURL_LIBS) $(EXPAT_LIBS) 


#
# ZMAP COMPONENTS
#


# I'd like to use this to crack a problem with the above .c.a rule, because the .a
# file ends up in the BINDIR but .c file is in the current dir, everything always
# gets made because make does not detect the .a file in the BINDIR. vpath or perhaps
# even VPATH should be able to solve this by specifying a search path for make whereby
# it should find the .a file....I just can't get it to work and it may be because of
# wierdness with the .c.a rule, i.e. the actual .a file is not mentioned in the rule
# and therefore vpath doesn't work or something like that.... (note this works for
# VPATH and headers below because the headers are given as an _explicit_ dependency).
#
#vpath %.a $(BINDIR)

# set search path for make, needs to include public headers directory.
#
VPATH = $(ZMAP_INCLUDE)/ZMap:$(BINDIR)


# this stuff is in common as well...sigh...need to fix this up...doesn't seem to
# work as I expected.......
#
# Zmap libraries
#
ZMAPAPP_LIBNAME = libZMapApp.a
ZMAPAPP_LIB = $(BINDIR)/$(ZMAPAPP_LIBNAME)
#
ZMAP_LIBNAME = libZMap.a
ZMAP_LIB = $(BINDIR)/$(ZMAP_LIBNAME)
#
ZMAPTHR_LIBNAME = libZMapThr.a
ZMAPTHR_LIB = $(BINDIR)/$(ZMAPTHR_LIBNAME)

ZMAPNOTHR_LIBNAME = libZMapNoThr.a
ZMAPNOTHR_LIB = $(BINDIR)/$(ZMAPNOTHR_LIBNAME)


#
# SUFFICES/RULES
#

# I think this is not needed for most makes...
#
# Add .C suffix, still not automatically recognised by make seemingly..
#.SUFFIXES : .C
#

.c.o :
	$(CC) $(CFLAGS) -c -o $(BINDIR)/$*.o $<
	$(AR) $(ARFLAGS) $(CURRENT_LIB) $(BINDIR)/$*.o

.C.o :
	$(CCC) $(CCFLAGS) -c -o $(BINDIR)/$*.o $<

.c.a :
	$(CC) $(CFLAGS) -c -o $(BINDIR)/$*.o  $< 
	$(AR) $(ARFLAGS) $(BINDIR)/$@ $(BINDIR)/$*.o
	rm -f $(BINDIR)/$*.o

.C.a :
	$(CCC) $(CCFLAGS) -c -o $(BINDIR)/$*.o  $<
	$(AR) $(ARFLAGS) $(BINDIR)/$@ $(BINDIR)/$*.o
	rm -f $(BINDIR)/$*.o

