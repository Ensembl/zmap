# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@USE_GBTOOLS_TRUE@am__append_1 = -I$(top_srcdir)/gbtools/src/include
@USE_HTSLIB_TRUE@am__append_2 = -I$(top_srcdir)/htslib
@USE_ACECONN_TRUE@am__append_3 = -I$(top_srcdir)/AceConn/include
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@am__append_4 = -I$(top_srcdir)/ensc-core/src/DataModel \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/DataAdaptors \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/Util \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/DataModel/Mapper \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/DataModel/Basic \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/Compara/DataAdaptors \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/Compara/DataModel \
@USE_ENSEMBL_SUBDIR_TRUE@@USE_ENSEMBL_TRUE@-I$(top_srcdir)/ensc-core/src/OBDA 

subdir = zmapWindow
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/ax_cxx_compile_stdcxx_0x.m4 \
	$(top_srcdir)/ax_lib_mysql.m4 $(top_srcdir)/zmap_version.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libZMapWindow_la_DEPENDENCIES = libZMapWindowGUI.la \
	libZMapWindowCanvas.la
am_libZMapWindow_la_OBJECTS =
libZMapWindow_la_OBJECTS = $(am_libZMapWindow_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libZMapWindow_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libZMapWindow_la_LDFLAGS) $(LDFLAGS) \
	-o $@
libZMapWindowCanvas_la_LIBADD =
am__objects_1 =
am_libZMapWindowCanvas_la_OBJECTS =  \
	libZMapWindowCanvas_la-zmapWindowCanvasAlignment.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasAssembly.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasBasic.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasDraw.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasFeature.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasGlyph.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasGraphics.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasLocus.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasSequence.lo \
	libZMapWindowCanvas_la-zmapWindowCanvasTranscript.lo \
	libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.lo \
	libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.lo \
	libZMapWindowCanvas_la-zmapWindowContainerGroup.lo \
	libZMapWindowCanvas_la-zmapWindowContainerItem.lo \
	libZMapWindowCanvas_la-zmapWindowOldItems.lo $(am__objects_1)
libZMapWindowCanvas_la_OBJECTS = $(am_libZMapWindowCanvas_la_OBJECTS)
libZMapWindowGUI_la_LIBADD =
am_libZMapWindowGUI_la_OBJECTS = libZMapWindowGUI_la-zmapWindow.lo \
	libZMapWindowGUI_la-zmapWindowCanvas.lo \
	libZMapWindowGUI_la-zmapWindowColBump.lo \
	libZMapWindowGUI_la-zmapWindowColConfig.lo \
	libZMapWindowGUI_la-zmapWindowColOrder.lo \
	libZMapWindowGUI_la-zmapWindowCommand.lo \
	libZMapWindowGUI_la-zmapWindowDisplayOps.lo \
	libZMapWindowGUI_la-zmapWindowDNA.lo \
	libZMapWindowGUI_la-zmapWindowDNAChoose.lo \
	libZMapWindowGUI_la-zmapWindowDNAList.lo \
	libZMapWindowGUI_la-zmapWindowDraw.lo \
	libZMapWindowGUI_la-zmapWindowDrawFeatures.lo \
	libZMapWindowGUI_la-zmapWindowDump.lo \
	libZMapWindowGUI_la-zmapWindowExport.lo \
	libZMapWindowGUI_la-zmapWindowFeature.lo \
	libZMapWindowGUI_la-zmapWindowFeatureFilter.lo \
	libZMapWindowGUI_la-zmapWindowFeatureFuncs.lo \
	libZMapWindowGUI_la-zmapWindowFeatureList.lo \
	libZMapWindowGUI_la-zmapWindowFeatureShow.lo \
	libZMapWindowGUI_la-zmapWindowFocus.lo \
	libZMapWindowGUI_la-zmapWindowItem.lo \
	libZMapWindowGUI_la-zmapWindowItemDebug.lo \
	libZMapWindowGUI_la-zmapWindowItemHash.lo \
	libZMapWindowGUI_la-zmapWindowList.lo \
	libZMapWindowGUI_la-zmapWindowMark.lo \
	libZMapWindowGUI_la-zmapWindowScratch.lo \
	libZMapWindowGUI_la-zmapWindowMenus.lo \
	libZMapWindowGUI_la-zmapWindowNavigator.lo \
	libZMapWindowGUI_la-zmapWindowNavigatorMenus.lo \
	libZMapWindowGUI_la-zmapWindowNavigatorWidget.lo \
	libZMapWindowGUI_la-zmapWindowPreferences.lo \
	libZMapWindowGUI_la-zmapWindowPrint.lo \
	libZMapWindowGUI_la-zmapWindowRemoteControl.lo \
	libZMapWindowGUI_la-zmapWindowRemoteControlUtils.lo \
	libZMapWindowGUI_la-zmapWindowScale.lo \
	libZMapWindowGUI_la-zmapWindowSearch.lo \
	libZMapWindowGUI_la-zmapWindowSeqDisp.lo \
	libZMapWindowGUI_la-zmapWindowState.lo \
	libZMapWindowGUI_la-zmapWindowStats.lo \
	libZMapWindowGUI_la-zmapWindowStyle.lo \
	libZMapWindowGUI_la-zmapWindowStyles.lo \
	libZMapWindowGUI_la-zmapWindowUtils.lo \
	libZMapWindowGUI_la-zmapWindowZoomControl.lo $(am__objects_1)
libZMapWindowGUI_la_OBJECTS = $(am_libZMapWindowGUI_la_OBJECTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libZMapWindow_la_SOURCES) \
	$(libZMapWindowCanvas_la_SOURCES) \
	$(libZMapWindowGUI_la_SOURCES)
DIST_SOURCES = $(libZMapWindow_la_SOURCES) \
	$(libZMapWindowCanvas_la_SOURCES) \
	$(libZMapWindowGUI_la_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.common \
	$(top_srcdir)/config/depcomp README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEMO_CANVAS_CFLAGS = @DEMO_CANVAS_CFLAGS@
DEMO_CANVAS_LIBS = @DEMO_CANVAS_LIBS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GLIB_GENMARSHAL = @GLIB_GENMARSHAL@
GREP = @GREP@
GTK_CFLAGS = @GTK_CFLAGS@
GTK_LIBS = @GTK_LIBS@
HAVE_MYSQL = @HAVE_MYSQL@
HAVE_MYSQL_LIB = @HAVE_MYSQL_LIB@
HAVE_SSL = @HAVE_SSL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBCURL = @LIBCURL@
LIBCURL_CPPFLAGS = @LIBCURL_CPPFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MACOSX_UNIVERSAL_FILE = @MACOSX_UNIVERSAL_FILE@
MACOSX_UNIVERSAL_FLAGS = @MACOSX_UNIVERSAL_FLAGS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
NEED_ENSEMBL = @NEED_ENSEMBL@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_ACECONN = @USE_ACECONN@
USE_ENSEMBL = @USE_ENSEMBL@
USE_ENSEMBL_SUBDIR = @USE_ENSEMBL_SUBDIR@
USE_HTSLIB = @USE_HTSLIB@
USE_ZEROMQ = @USE_ZEROMQ@
VERSION = @VERSION@
ZMAPHOSTPORT = @ZMAPHOSTPORT@
ZMAPSCHEME = @ZMAPSCHEME@
ZMAPSTYLESFILE = @ZMAPSTYLESFILE@
ZMAPUSERNAMEPASSWORD = @ZMAPUSERNAMEPASSWORD@
ZMAP_DOXY_HTML_FILE_EXT = @ZMAP_DOXY_HTML_FILE_EXT@
ZMAP_DOXY_HTML_FOOTER = @ZMAP_DOXY_HTML_FOOTER@
ZMAP_DOXY_HTML_HEADER = @ZMAP_DOXY_HTML_HEADER@
ZMAP_SRC_DIRS = @ZMAP_SRC_DIRS@
ZMAP_SRC_DIRS_DOXYGEN = @ZMAP_SRC_DIRS_DOXYGEN@
_libcurl_config = @_libcurl_config@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
runstatedir = @runstatedir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = gnu
NULL = 
ARFLAGS = cru

# in the below why don't we use the "+=" syntax  for ensembl stuff too ?

# I'm hacking in zmapApp here for now....
AM_CPPFLAGS = -I$(top_srcdir)/zmapApp -I$(top_srcdir)/include \
	-I$(top_builddir) -I$(top_srcdir)/zeromq/include \
	-I$(top_srcdir) @GTK_CFLAGS@ @LIBCURL_CPPFLAGS@ $(NULL) \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4)

# If we had any compiler or loader flags that always needed to be specified
# here would be the place to put them. Flags such optimising or debugging
# are set up by the runconfig script so look there for details.
# 
AM_CXXFLAGS = -std=c++11
#
#AM_LDFLAGS =     loader flags here
INCLUDE_COMMON = -I$(top_srcdir) -I$(top_srcdir)/include -I.

# DO WE NEED THIS ANY MORE ????
#
# Required by the install-zmap-static-libs target.
LIBS_ZMAP = $(top_builddir)/.libs/libZMapApp.a \
	$(top_builddir)/.libs/libZMapApp.la \
	$(top_builddir)/.libs/libZMap.a \
	$(top_builddir)/.libs/libZMap.la \
	$(top_builddir)/.libs/libZMapDataSource.a \
	$(top_builddir)/.libs/libZMapDataSource.la \
	$(top_builddir)/.libs/libZMapThreads.a \
	$(top_builddir)/.libs/libZMapThreads.la \
	$(top_builddir)/.libs/libZMapThreadsLib.a \
	$(top_builddir)/.libs/libZMapThreadsLib.la \
	$(top_builddir)/.libs/libZMapRemoteControl.a \
	$(top_builddir)/.libs/libZMapRemoteControl.la \
	$(top_builddir)/.libs/libZMapXML.a \
	$(top_builddir)/.libs/libZMapXML.la \
	$(top_builddir)/.libs/libZMapAppServices.a \
	$(top_builddir)/.libs/libZMapAppServices.la \
	$(top_builddir)/.libs/libZMapUtils.a \
	$(top_builddir)/.libs/libZMapUtils.la \
	$(top_builddir)/.libs/libzmapfoocanvas.a \
	$(top_builddir)/.libs/libzmapfoocanvas.la \
	$(NULL)

SUBDIRS = .

#noinst_LTLIBRARIES = libZMapWindow.la libZMapWindowGUI.la libZMapWindowItems.la libZMapWindowCanvas.la
noinst_LTLIBRARIES = libZMapWindow.la libZMapWindowGUI.la libZMapWindowCanvas.la
libZMapWindow_la_SOURCES = 
#libZMapWindow_la_LIBADD  = libZMapWindowGUI.la libZMapWindowItems.la libZMapWindowCanvas.la
libZMapWindow_la_LIBADD = libZMapWindowGUI.la libZMapWindowCanvas.la
libZMapWindow_la_LDFLAGS = -all-static
libZMapWindowGUI_la_SOURCES = \
zmapWindow.cpp \
zmapWindowCanvas.cpp \
zmapWindowColBump.cpp \
zmapWindowColConfig.cpp \
zmapWindowColOrder.cpp \
zmapWindowCommand.cpp \
zmapWindowDisplayOps.cpp \
zmapWindowDNA.cpp \
zmapWindowDNAChoose.cpp \
zmapWindowDNAList.cpp \
zmapWindowDNAList.hpp \
zmapWindowDNAList_I.hpp \
zmapWindowDraw.cpp \
zmapWindowDrawFeatures.cpp \
zmapWindowDump.cpp \
zmapWindowExport.cpp \
zmapWindowFeature.cpp \
zmapWindowFeatureFilter.cpp \
zmapWindowFeatureFuncs.cpp \
zmapWindowFeatureList.cpp \
zmapWindowFeatureList.hpp \
zmapWindowFeatureList_I.hpp \
zmapWindowFeatureShow.cpp \
zmapWindowFocus.cpp \
zmapWindowItem.cpp \
zmapWindowItemDebug.cpp \
zmapWindowItemHash.cpp \
zmapWindowList.cpp \
zmapWindowMark.cpp \
zmapWindowMark.hpp \
zmapWindowScratch.cpp \
zmapWindowScratch_P.hpp \
zmapWindowMenus.cpp \
zmapWindowNavigator.cpp \
zmapWindowNavigatorMenus.cpp \
zmapWindowNavigatorWidget.cpp \
zmapWindowNavigator_P.hpp \
zmapWindowPreferences.cpp \
zmapWindowPrint.cpp \
zmapWindowRemoteControl.cpp \
zmapWindowRemoteControlUtils.cpp \
zmapWindowScale.cpp \
zmapWindowSearch.cpp \
zmapWindowSeqDisp.cpp \
zmapWindowState.cpp \
zmapWindowState.hpp \
zmapWindowStats.cpp \
zmapWindowStyle.cpp \
zmapWindowStyles.cpp \
zmapWindowUtils.cpp \
zmapWindowZoomControl.cpp \
zmapWindowZoomControl_P.hpp \
zmapWindow_P.hpp \
$(NULL)


#libZMapWindowGUI_la_CFLAGS = $(INCLUDE_COMMON) -I$(top_srcdir)/zmapUtils -I$(top_srcdir)/zmapWindow/items -I$(top_srcdir)/zmapWindow/canvas
libZMapWindowGUI_la_CFLAGS = $(INCLUDE_COMMON) -I$(top_srcdir)/zmapUtils -I$(top_srcdir)/zmapWindow/canvas
libZMapWindowGUI_la_CPPFLAGS = $(AM_CPPFLAGS) $(libZMapWindowGUI_la_CFLAGS)
libZMapWindowCanvas_la_SOURCES = \
canvas/zmapWindowAllBase.hpp \
canvas/zmapWindowCanvasAlignment.cpp \
canvas/zmapWindowCanvasAlignment.hpp \
canvas/zmapWindowCanvasAlignment_I.hpp \
canvas/zmapWindowCanvasAssembly.cpp \
canvas/zmapWindowCanvasAssembly.hpp \
canvas/zmapWindowCanvasAssembly_I.hpp \
canvas/zmapWindowCanvasBasic.cpp \
canvas/zmapWindowCanvasBasic.hpp \
canvas/zmapWindowCanvasDraw.cpp \
canvas/zmapWindowCanvasDraw.hpp \
canvas/zmapWindowCanvasFeature.cpp \
canvas/zmapWindowCanvasFeature.hpp \
canvas/zmapWindowCanvasFeature_I.hpp \
canvas/zmapWindowCanvasFeatureset.cpp \
canvas/zmapWindowCanvasFeatureset.hpp \
canvas/zmapWindowCanvasFeaturesetBump.cpp \
canvas/zmapWindowCanvasFeaturesetSummarise.cpp \
canvas/zmapWindowCanvasFeatureset_I.hpp \
canvas/zmapWindowCanvasGlyph.cpp \
canvas/zmapWindowCanvasGlyph.hpp \
canvas/zmapWindowCanvasGlyph_I.hpp \
canvas/zmapWindowCanvasGraphItem.cpp \
canvas/zmapWindowCanvasGraphItem.hpp \
canvas/zmapWindowCanvasGraphItem_I.hpp \
canvas/zmapWindowCanvasGraphics.cpp \
canvas/zmapWindowCanvasGraphics.hpp \
canvas/zmapWindowCanvasGraphics_I.hpp \
canvas/zmapWindowCanvasItem.hpp \
canvas/zmapWindowCanvasItem_I.hpp \
canvas/zmapWindowCanvasLocus.cpp \
canvas/zmapWindowCanvasLocus.hpp \
canvas/zmapWindowCanvasLocus_I.hpp \
canvas/zmapWindowCanvasSequence.cpp \
canvas/zmapWindowCanvasSequence.hpp \
canvas/zmapWindowCanvasSequence_I.hpp \
canvas/zmapWindowCanvasTranscript.cpp \
canvas/zmapWindowCanvasTranscript.hpp \
canvas/zmapWindowCanvasTranscript_I.hpp \
canvas/zmapWindowContainerAlignment.hpp \
canvas/zmapWindowContainerAlignment_I.hpp \
canvas/zmapWindowContainerBlock.hpp \
canvas/zmapWindowContainerBlock_I.hpp \
canvas/zmapWindowContainerContext.hpp \
canvas/zmapWindowContainerContext_I.hpp \
canvas/zmapWindowContainerFeatureSet.cpp \
canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp \
canvas/zmapWindowContainerFeatureSet.hpp \
canvas/zmapWindowContainerFeatureSet_I.hpp \
canvas/zmapWindowContainerGroup.cpp \
canvas/zmapWindowContainerGroup.hpp \
canvas/zmapWindowContainerGroup_I.hpp \
canvas/zmapWindowContainerItem.cpp \
canvas/zmapWindowContainerUtils.hpp \
canvas/zmapWindowContainers.hpp \
canvas/zmapWindowOldItems.cpp \
$(NULL)


# We need the top_builddir to find the generated marshal code#
#libZMapWindowItems_la_CFLAGS = $(INCLUDE_COMMON) -I$(top_srcdir)/zmapUtils -I$(top_srcdir)/zmapWindow/items -I$(top_srcdir)/zmapWindow/canvas
#libZMapWindowItems_la_CFLAGS = $(INCLUDE_COMMON) -I$(top_srcdir)/zmapUtils -I$(top_srcdir)/zmapWindow/canvas

#libZMapWindowItems_la_DEPENDENCIES = $(nodist_libZMapWindowItems_la_SOURCES)

#libZMapWindowCanvas_la_CFLAGS = $(INCLUDE_COMMON) -I$(top_srcdir)/zmapUtils  -I$(top_srcdir)/zmapWindow/canvas -I$(top_srcdir)/zmapWindow/items
libZMapWindowCanvas_la_CFLAGS = $(INCLUDE_COMMON) -I$(top_srcdir)/zmapUtils  -I$(top_srcdir)/zmapWindow/canvas
libZMapWindowCanvas_la_CPPFLAGS = $(AM_CPPFLAGS) $(libZMapWindowCanvas_la_CFLAGS)
libZMapWindowCanvas_la_DEPENDENCIES = $(nodist_libZMapWindowCanvas_la_SOURCES)

# Extra files to remove for the maintainer-clean target.
#
MAINTAINERCLEANFILES = $(top_srcdir)/zmapWindow/Makefile.in
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu zmapWindow/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu zmapWindow/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libZMapWindow.la: $(libZMapWindow_la_OBJECTS) $(libZMapWindow_la_DEPENDENCIES) $(EXTRA_libZMapWindow_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libZMapWindow_la_LINK)  $(libZMapWindow_la_OBJECTS) $(libZMapWindow_la_LIBADD) $(LIBS)

libZMapWindowCanvas.la: $(libZMapWindowCanvas_la_OBJECTS) $(libZMapWindowCanvas_la_DEPENDENCIES) $(EXTRA_libZMapWindowCanvas_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libZMapWindowCanvas_la_OBJECTS) $(libZMapWindowCanvas_la_LIBADD) $(LIBS)

libZMapWindowGUI.la: $(libZMapWindowGUI_la_OBJECTS) $(libZMapWindowGUI_la_DEPENDENCIES) $(EXTRA_libZMapWindowGUI_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libZMapWindowGUI_la_OBJECTS) $(libZMapWindowGUI_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAlignment.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAssembly.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasBasic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasDraw.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeature.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGlyph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphics.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasLocus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasSequence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasTranscript.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerGroup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerItem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowCanvas_la-zmapWindowOldItems.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowCanvas.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowColBump.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowColConfig.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowColOrder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowCommand.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNA.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAChoose.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDisplayOps.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDraw.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDrawFeatures.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowDump.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowExport.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeature.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFilter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFuncs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureShow.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowFocus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowItem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemDebug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemHash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowMark.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowMenus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorMenus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorWidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowPreferences.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowPrint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControlUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowScale.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowScratch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowSearch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowSeqDisp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowState.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowStats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyle.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libZMapWindowGUI_la-zmapWindowZoomControl.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

libZMapWindowCanvas_la-zmapWindowCanvasAlignment.lo: canvas/zmapWindowCanvasAlignment.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasAlignment.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAlignment.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasAlignment.lo `test -f 'canvas/zmapWindowCanvasAlignment.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasAlignment.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAlignment.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAlignment.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasAlignment.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasAlignment.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasAlignment.lo `test -f 'canvas/zmapWindowCanvasAlignment.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasAlignment.cpp

libZMapWindowCanvas_la-zmapWindowCanvasAssembly.lo: canvas/zmapWindowCanvasAssembly.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasAssembly.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAssembly.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasAssembly.lo `test -f 'canvas/zmapWindowCanvasAssembly.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasAssembly.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAssembly.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasAssembly.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasAssembly.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasAssembly.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasAssembly.lo `test -f 'canvas/zmapWindowCanvasAssembly.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasAssembly.cpp

libZMapWindowCanvas_la-zmapWindowCanvasBasic.lo: canvas/zmapWindowCanvasBasic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasBasic.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasBasic.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasBasic.lo `test -f 'canvas/zmapWindowCanvasBasic.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasBasic.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasBasic.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasBasic.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasBasic.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasBasic.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasBasic.lo `test -f 'canvas/zmapWindowCanvasBasic.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasBasic.cpp

libZMapWindowCanvas_la-zmapWindowCanvasDraw.lo: canvas/zmapWindowCanvasDraw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasDraw.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasDraw.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasDraw.lo `test -f 'canvas/zmapWindowCanvasDraw.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasDraw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasDraw.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasDraw.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasDraw.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasDraw.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasDraw.lo `test -f 'canvas/zmapWindowCanvasDraw.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasDraw.cpp

libZMapWindowCanvas_la-zmapWindowCanvasFeature.lo: canvas/zmapWindowCanvasFeature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasFeature.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeature.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeature.lo `test -f 'canvas/zmapWindowCanvasFeature.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeature.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeature.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasFeature.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasFeature.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeature.lo `test -f 'canvas/zmapWindowCanvasFeature.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeature.cpp

libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.lo: canvas/zmapWindowCanvasFeatureset.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.lo `test -f 'canvas/zmapWindowCanvasFeatureset.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeatureset.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasFeatureset.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeatureset.lo `test -f 'canvas/zmapWindowCanvasFeatureset.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeatureset.cpp

libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.lo: canvas/zmapWindowCanvasFeaturesetBump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.lo `test -f 'canvas/zmapWindowCanvasFeaturesetBump.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeaturesetBump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasFeaturesetBump.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetBump.lo `test -f 'canvas/zmapWindowCanvasFeaturesetBump.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeaturesetBump.cpp

libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.lo: canvas/zmapWindowCanvasFeaturesetSummarise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.lo `test -f 'canvas/zmapWindowCanvasFeaturesetSummarise.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeaturesetSummarise.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasFeaturesetSummarise.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasFeaturesetSummarise.lo `test -f 'canvas/zmapWindowCanvasFeaturesetSummarise.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasFeaturesetSummarise.cpp

libZMapWindowCanvas_la-zmapWindowCanvasGlyph.lo: canvas/zmapWindowCanvasGlyph.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasGlyph.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGlyph.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasGlyph.lo `test -f 'canvas/zmapWindowCanvasGlyph.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasGlyph.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGlyph.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGlyph.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasGlyph.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasGlyph.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasGlyph.lo `test -f 'canvas/zmapWindowCanvasGlyph.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasGlyph.cpp

libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.lo: canvas/zmapWindowCanvasGraphItem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.lo `test -f 'canvas/zmapWindowCanvasGraphItem.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasGraphItem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasGraphItem.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasGraphItem.lo `test -f 'canvas/zmapWindowCanvasGraphItem.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasGraphItem.cpp

libZMapWindowCanvas_la-zmapWindowCanvasGraphics.lo: canvas/zmapWindowCanvasGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasGraphics.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphics.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasGraphics.lo `test -f 'canvas/zmapWindowCanvasGraphics.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasGraphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphics.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasGraphics.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasGraphics.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasGraphics.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasGraphics.lo `test -f 'canvas/zmapWindowCanvasGraphics.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasGraphics.cpp

libZMapWindowCanvas_la-zmapWindowCanvasLocus.lo: canvas/zmapWindowCanvasLocus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasLocus.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasLocus.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasLocus.lo `test -f 'canvas/zmapWindowCanvasLocus.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasLocus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasLocus.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasLocus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasLocus.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasLocus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasLocus.lo `test -f 'canvas/zmapWindowCanvasLocus.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasLocus.cpp

libZMapWindowCanvas_la-zmapWindowCanvasSequence.lo: canvas/zmapWindowCanvasSequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasSequence.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasSequence.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasSequence.lo `test -f 'canvas/zmapWindowCanvasSequence.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasSequence.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasSequence.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasSequence.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasSequence.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasSequence.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasSequence.lo `test -f 'canvas/zmapWindowCanvasSequence.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasSequence.cpp

libZMapWindowCanvas_la-zmapWindowCanvasTranscript.lo: canvas/zmapWindowCanvasTranscript.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowCanvasTranscript.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasTranscript.Tpo -c -o libZMapWindowCanvas_la-zmapWindowCanvasTranscript.lo `test -f 'canvas/zmapWindowCanvasTranscript.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasTranscript.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasTranscript.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowCanvasTranscript.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowCanvasTranscript.cpp' object='libZMapWindowCanvas_la-zmapWindowCanvasTranscript.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowCanvasTranscript.lo `test -f 'canvas/zmapWindowCanvasTranscript.cpp' || echo '$(srcdir)/'`canvas/zmapWindowCanvasTranscript.cpp

libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.lo: canvas/zmapWindowContainerFeatureSet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.Tpo -c -o libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.lo `test -f 'canvas/zmapWindowContainerFeatureSet.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerFeatureSet.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowContainerFeatureSet.cpp' object='libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowContainerFeatureSet.lo `test -f 'canvas/zmapWindowContainerFeatureSet.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerFeatureSet.cpp

libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.lo: canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.Tpo -c -o libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.lo `test -f 'canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp' object='libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowContainerFeatureSetFeatureFuncs.lo `test -f 'canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerFeatureSetFeatureFuncs.cpp

libZMapWindowCanvas_la-zmapWindowContainerGroup.lo: canvas/zmapWindowContainerGroup.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowContainerGroup.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerGroup.Tpo -c -o libZMapWindowCanvas_la-zmapWindowContainerGroup.lo `test -f 'canvas/zmapWindowContainerGroup.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerGroup.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerGroup.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerGroup.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowContainerGroup.cpp' object='libZMapWindowCanvas_la-zmapWindowContainerGroup.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowContainerGroup.lo `test -f 'canvas/zmapWindowContainerGroup.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerGroup.cpp

libZMapWindowCanvas_la-zmapWindowContainerItem.lo: canvas/zmapWindowContainerItem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowContainerItem.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerItem.Tpo -c -o libZMapWindowCanvas_la-zmapWindowContainerItem.lo `test -f 'canvas/zmapWindowContainerItem.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerItem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerItem.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowContainerItem.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowContainerItem.cpp' object='libZMapWindowCanvas_la-zmapWindowContainerItem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowContainerItem.lo `test -f 'canvas/zmapWindowContainerItem.cpp' || echo '$(srcdir)/'`canvas/zmapWindowContainerItem.cpp

libZMapWindowCanvas_la-zmapWindowOldItems.lo: canvas/zmapWindowOldItems.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowCanvas_la-zmapWindowOldItems.lo -MD -MP -MF $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowOldItems.Tpo -c -o libZMapWindowCanvas_la-zmapWindowOldItems.lo `test -f 'canvas/zmapWindowOldItems.cpp' || echo '$(srcdir)/'`canvas/zmapWindowOldItems.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowOldItems.Tpo $(DEPDIR)/libZMapWindowCanvas_la-zmapWindowOldItems.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='canvas/zmapWindowOldItems.cpp' object='libZMapWindowCanvas_la-zmapWindowOldItems.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowCanvas_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowCanvas_la-zmapWindowOldItems.lo `test -f 'canvas/zmapWindowOldItems.cpp' || echo '$(srcdir)/'`canvas/zmapWindowOldItems.cpp

libZMapWindowGUI_la-zmapWindow.lo: zmapWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindow.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindow.Tpo -c -o libZMapWindowGUI_la-zmapWindow.lo `test -f 'zmapWindow.cpp' || echo '$(srcdir)/'`zmapWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindow.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindow.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindow.cpp' object='libZMapWindowGUI_la-zmapWindow.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindow.lo `test -f 'zmapWindow.cpp' || echo '$(srcdir)/'`zmapWindow.cpp

libZMapWindowGUI_la-zmapWindowCanvas.lo: zmapWindowCanvas.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowCanvas.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowCanvas.Tpo -c -o libZMapWindowGUI_la-zmapWindowCanvas.lo `test -f 'zmapWindowCanvas.cpp' || echo '$(srcdir)/'`zmapWindowCanvas.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowCanvas.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowCanvas.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowCanvas.cpp' object='libZMapWindowGUI_la-zmapWindowCanvas.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowCanvas.lo `test -f 'zmapWindowCanvas.cpp' || echo '$(srcdir)/'`zmapWindowCanvas.cpp

libZMapWindowGUI_la-zmapWindowColBump.lo: zmapWindowColBump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowColBump.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColBump.Tpo -c -o libZMapWindowGUI_la-zmapWindowColBump.lo `test -f 'zmapWindowColBump.cpp' || echo '$(srcdir)/'`zmapWindowColBump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColBump.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColBump.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowColBump.cpp' object='libZMapWindowGUI_la-zmapWindowColBump.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowColBump.lo `test -f 'zmapWindowColBump.cpp' || echo '$(srcdir)/'`zmapWindowColBump.cpp

libZMapWindowGUI_la-zmapWindowColConfig.lo: zmapWindowColConfig.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowColConfig.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColConfig.Tpo -c -o libZMapWindowGUI_la-zmapWindowColConfig.lo `test -f 'zmapWindowColConfig.cpp' || echo '$(srcdir)/'`zmapWindowColConfig.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColConfig.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColConfig.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowColConfig.cpp' object='libZMapWindowGUI_la-zmapWindowColConfig.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowColConfig.lo `test -f 'zmapWindowColConfig.cpp' || echo '$(srcdir)/'`zmapWindowColConfig.cpp

libZMapWindowGUI_la-zmapWindowColOrder.lo: zmapWindowColOrder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowColOrder.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColOrder.Tpo -c -o libZMapWindowGUI_la-zmapWindowColOrder.lo `test -f 'zmapWindowColOrder.cpp' || echo '$(srcdir)/'`zmapWindowColOrder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColOrder.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowColOrder.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowColOrder.cpp' object='libZMapWindowGUI_la-zmapWindowColOrder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowColOrder.lo `test -f 'zmapWindowColOrder.cpp' || echo '$(srcdir)/'`zmapWindowColOrder.cpp

libZMapWindowGUI_la-zmapWindowCommand.lo: zmapWindowCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowCommand.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowCommand.Tpo -c -o libZMapWindowGUI_la-zmapWindowCommand.lo `test -f 'zmapWindowCommand.cpp' || echo '$(srcdir)/'`zmapWindowCommand.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowCommand.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowCommand.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowCommand.cpp' object='libZMapWindowGUI_la-zmapWindowCommand.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowCommand.lo `test -f 'zmapWindowCommand.cpp' || echo '$(srcdir)/'`zmapWindowCommand.cpp

libZMapWindowGUI_la-zmapWindowDisplayOps.lo: zmapWindowDisplayOps.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDisplayOps.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDisplayOps.Tpo -c -o libZMapWindowGUI_la-zmapWindowDisplayOps.lo `test -f 'zmapWindowDisplayOps.cpp' || echo '$(srcdir)/'`zmapWindowDisplayOps.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDisplayOps.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDisplayOps.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDisplayOps.cpp' object='libZMapWindowGUI_la-zmapWindowDisplayOps.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDisplayOps.lo `test -f 'zmapWindowDisplayOps.cpp' || echo '$(srcdir)/'`zmapWindowDisplayOps.cpp

libZMapWindowGUI_la-zmapWindowDNA.lo: zmapWindowDNA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDNA.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNA.Tpo -c -o libZMapWindowGUI_la-zmapWindowDNA.lo `test -f 'zmapWindowDNA.cpp' || echo '$(srcdir)/'`zmapWindowDNA.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNA.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNA.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDNA.cpp' object='libZMapWindowGUI_la-zmapWindowDNA.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDNA.lo `test -f 'zmapWindowDNA.cpp' || echo '$(srcdir)/'`zmapWindowDNA.cpp

libZMapWindowGUI_la-zmapWindowDNAChoose.lo: zmapWindowDNAChoose.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDNAChoose.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAChoose.Tpo -c -o libZMapWindowGUI_la-zmapWindowDNAChoose.lo `test -f 'zmapWindowDNAChoose.cpp' || echo '$(srcdir)/'`zmapWindowDNAChoose.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAChoose.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAChoose.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDNAChoose.cpp' object='libZMapWindowGUI_la-zmapWindowDNAChoose.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDNAChoose.lo `test -f 'zmapWindowDNAChoose.cpp' || echo '$(srcdir)/'`zmapWindowDNAChoose.cpp

libZMapWindowGUI_la-zmapWindowDNAList.lo: zmapWindowDNAList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDNAList.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAList.Tpo -c -o libZMapWindowGUI_la-zmapWindowDNAList.lo `test -f 'zmapWindowDNAList.cpp' || echo '$(srcdir)/'`zmapWindowDNAList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAList.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDNAList.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDNAList.cpp' object='libZMapWindowGUI_la-zmapWindowDNAList.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDNAList.lo `test -f 'zmapWindowDNAList.cpp' || echo '$(srcdir)/'`zmapWindowDNAList.cpp

libZMapWindowGUI_la-zmapWindowDraw.lo: zmapWindowDraw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDraw.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDraw.Tpo -c -o libZMapWindowGUI_la-zmapWindowDraw.lo `test -f 'zmapWindowDraw.cpp' || echo '$(srcdir)/'`zmapWindowDraw.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDraw.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDraw.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDraw.cpp' object='libZMapWindowGUI_la-zmapWindowDraw.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDraw.lo `test -f 'zmapWindowDraw.cpp' || echo '$(srcdir)/'`zmapWindowDraw.cpp

libZMapWindowGUI_la-zmapWindowDrawFeatures.lo: zmapWindowDrawFeatures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDrawFeatures.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDrawFeatures.Tpo -c -o libZMapWindowGUI_la-zmapWindowDrawFeatures.lo `test -f 'zmapWindowDrawFeatures.cpp' || echo '$(srcdir)/'`zmapWindowDrawFeatures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDrawFeatures.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDrawFeatures.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDrawFeatures.cpp' object='libZMapWindowGUI_la-zmapWindowDrawFeatures.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDrawFeatures.lo `test -f 'zmapWindowDrawFeatures.cpp' || echo '$(srcdir)/'`zmapWindowDrawFeatures.cpp

libZMapWindowGUI_la-zmapWindowDump.lo: zmapWindowDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowDump.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDump.Tpo -c -o libZMapWindowGUI_la-zmapWindowDump.lo `test -f 'zmapWindowDump.cpp' || echo '$(srcdir)/'`zmapWindowDump.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDump.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowDump.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowDump.cpp' object='libZMapWindowGUI_la-zmapWindowDump.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowDump.lo `test -f 'zmapWindowDump.cpp' || echo '$(srcdir)/'`zmapWindowDump.cpp

libZMapWindowGUI_la-zmapWindowExport.lo: zmapWindowExport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowExport.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowExport.Tpo -c -o libZMapWindowGUI_la-zmapWindowExport.lo `test -f 'zmapWindowExport.cpp' || echo '$(srcdir)/'`zmapWindowExport.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowExport.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowExport.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowExport.cpp' object='libZMapWindowGUI_la-zmapWindowExport.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowExport.lo `test -f 'zmapWindowExport.cpp' || echo '$(srcdir)/'`zmapWindowExport.cpp

libZMapWindowGUI_la-zmapWindowFeature.lo: zmapWindowFeature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowFeature.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeature.Tpo -c -o libZMapWindowGUI_la-zmapWindowFeature.lo `test -f 'zmapWindowFeature.cpp' || echo '$(srcdir)/'`zmapWindowFeature.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeature.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeature.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowFeature.cpp' object='libZMapWindowGUI_la-zmapWindowFeature.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowFeature.lo `test -f 'zmapWindowFeature.cpp' || echo '$(srcdir)/'`zmapWindowFeature.cpp

libZMapWindowGUI_la-zmapWindowFeatureFilter.lo: zmapWindowFeatureFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowFeatureFilter.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFilter.Tpo -c -o libZMapWindowGUI_la-zmapWindowFeatureFilter.lo `test -f 'zmapWindowFeatureFilter.cpp' || echo '$(srcdir)/'`zmapWindowFeatureFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFilter.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFilter.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowFeatureFilter.cpp' object='libZMapWindowGUI_la-zmapWindowFeatureFilter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowFeatureFilter.lo `test -f 'zmapWindowFeatureFilter.cpp' || echo '$(srcdir)/'`zmapWindowFeatureFilter.cpp

libZMapWindowGUI_la-zmapWindowFeatureFuncs.lo: zmapWindowFeatureFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowFeatureFuncs.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFuncs.Tpo -c -o libZMapWindowGUI_la-zmapWindowFeatureFuncs.lo `test -f 'zmapWindowFeatureFuncs.cpp' || echo '$(srcdir)/'`zmapWindowFeatureFuncs.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFuncs.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureFuncs.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowFeatureFuncs.cpp' object='libZMapWindowGUI_la-zmapWindowFeatureFuncs.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowFeatureFuncs.lo `test -f 'zmapWindowFeatureFuncs.cpp' || echo '$(srcdir)/'`zmapWindowFeatureFuncs.cpp

libZMapWindowGUI_la-zmapWindowFeatureList.lo: zmapWindowFeatureList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowFeatureList.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureList.Tpo -c -o libZMapWindowGUI_la-zmapWindowFeatureList.lo `test -f 'zmapWindowFeatureList.cpp' || echo '$(srcdir)/'`zmapWindowFeatureList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureList.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureList.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowFeatureList.cpp' object='libZMapWindowGUI_la-zmapWindowFeatureList.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowFeatureList.lo `test -f 'zmapWindowFeatureList.cpp' || echo '$(srcdir)/'`zmapWindowFeatureList.cpp

libZMapWindowGUI_la-zmapWindowFeatureShow.lo: zmapWindowFeatureShow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowFeatureShow.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureShow.Tpo -c -o libZMapWindowGUI_la-zmapWindowFeatureShow.lo `test -f 'zmapWindowFeatureShow.cpp' || echo '$(srcdir)/'`zmapWindowFeatureShow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureShow.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFeatureShow.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowFeatureShow.cpp' object='libZMapWindowGUI_la-zmapWindowFeatureShow.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowFeatureShow.lo `test -f 'zmapWindowFeatureShow.cpp' || echo '$(srcdir)/'`zmapWindowFeatureShow.cpp

libZMapWindowGUI_la-zmapWindowFocus.lo: zmapWindowFocus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowFocus.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFocus.Tpo -c -o libZMapWindowGUI_la-zmapWindowFocus.lo `test -f 'zmapWindowFocus.cpp' || echo '$(srcdir)/'`zmapWindowFocus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFocus.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowFocus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowFocus.cpp' object='libZMapWindowGUI_la-zmapWindowFocus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowFocus.lo `test -f 'zmapWindowFocus.cpp' || echo '$(srcdir)/'`zmapWindowFocus.cpp

libZMapWindowGUI_la-zmapWindowItem.lo: zmapWindowItem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowItem.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItem.Tpo -c -o libZMapWindowGUI_la-zmapWindowItem.lo `test -f 'zmapWindowItem.cpp' || echo '$(srcdir)/'`zmapWindowItem.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItem.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItem.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowItem.cpp' object='libZMapWindowGUI_la-zmapWindowItem.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowItem.lo `test -f 'zmapWindowItem.cpp' || echo '$(srcdir)/'`zmapWindowItem.cpp

libZMapWindowGUI_la-zmapWindowItemDebug.lo: zmapWindowItemDebug.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowItemDebug.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemDebug.Tpo -c -o libZMapWindowGUI_la-zmapWindowItemDebug.lo `test -f 'zmapWindowItemDebug.cpp' || echo '$(srcdir)/'`zmapWindowItemDebug.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemDebug.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemDebug.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowItemDebug.cpp' object='libZMapWindowGUI_la-zmapWindowItemDebug.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowItemDebug.lo `test -f 'zmapWindowItemDebug.cpp' || echo '$(srcdir)/'`zmapWindowItemDebug.cpp

libZMapWindowGUI_la-zmapWindowItemHash.lo: zmapWindowItemHash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowItemHash.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemHash.Tpo -c -o libZMapWindowGUI_la-zmapWindowItemHash.lo `test -f 'zmapWindowItemHash.cpp' || echo '$(srcdir)/'`zmapWindowItemHash.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemHash.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowItemHash.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowItemHash.cpp' object='libZMapWindowGUI_la-zmapWindowItemHash.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowItemHash.lo `test -f 'zmapWindowItemHash.cpp' || echo '$(srcdir)/'`zmapWindowItemHash.cpp

libZMapWindowGUI_la-zmapWindowList.lo: zmapWindowList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowList.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowList.Tpo -c -o libZMapWindowGUI_la-zmapWindowList.lo `test -f 'zmapWindowList.cpp' || echo '$(srcdir)/'`zmapWindowList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowList.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowList.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowList.cpp' object='libZMapWindowGUI_la-zmapWindowList.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowList.lo `test -f 'zmapWindowList.cpp' || echo '$(srcdir)/'`zmapWindowList.cpp

libZMapWindowGUI_la-zmapWindowMark.lo: zmapWindowMark.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowMark.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowMark.Tpo -c -o libZMapWindowGUI_la-zmapWindowMark.lo `test -f 'zmapWindowMark.cpp' || echo '$(srcdir)/'`zmapWindowMark.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowMark.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowMark.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowMark.cpp' object='libZMapWindowGUI_la-zmapWindowMark.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowMark.lo `test -f 'zmapWindowMark.cpp' || echo '$(srcdir)/'`zmapWindowMark.cpp

libZMapWindowGUI_la-zmapWindowScratch.lo: zmapWindowScratch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowScratch.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowScratch.Tpo -c -o libZMapWindowGUI_la-zmapWindowScratch.lo `test -f 'zmapWindowScratch.cpp' || echo '$(srcdir)/'`zmapWindowScratch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowScratch.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowScratch.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowScratch.cpp' object='libZMapWindowGUI_la-zmapWindowScratch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowScratch.lo `test -f 'zmapWindowScratch.cpp' || echo '$(srcdir)/'`zmapWindowScratch.cpp

libZMapWindowGUI_la-zmapWindowMenus.lo: zmapWindowMenus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowMenus.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowMenus.Tpo -c -o libZMapWindowGUI_la-zmapWindowMenus.lo `test -f 'zmapWindowMenus.cpp' || echo '$(srcdir)/'`zmapWindowMenus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowMenus.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowMenus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowMenus.cpp' object='libZMapWindowGUI_la-zmapWindowMenus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowMenus.lo `test -f 'zmapWindowMenus.cpp' || echo '$(srcdir)/'`zmapWindowMenus.cpp

libZMapWindowGUI_la-zmapWindowNavigator.lo: zmapWindowNavigator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowNavigator.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigator.Tpo -c -o libZMapWindowGUI_la-zmapWindowNavigator.lo `test -f 'zmapWindowNavigator.cpp' || echo '$(srcdir)/'`zmapWindowNavigator.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigator.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigator.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowNavigator.cpp' object='libZMapWindowGUI_la-zmapWindowNavigator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowNavigator.lo `test -f 'zmapWindowNavigator.cpp' || echo '$(srcdir)/'`zmapWindowNavigator.cpp

libZMapWindowGUI_la-zmapWindowNavigatorMenus.lo: zmapWindowNavigatorMenus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowNavigatorMenus.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorMenus.Tpo -c -o libZMapWindowGUI_la-zmapWindowNavigatorMenus.lo `test -f 'zmapWindowNavigatorMenus.cpp' || echo '$(srcdir)/'`zmapWindowNavigatorMenus.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorMenus.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorMenus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowNavigatorMenus.cpp' object='libZMapWindowGUI_la-zmapWindowNavigatorMenus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowNavigatorMenus.lo `test -f 'zmapWindowNavigatorMenus.cpp' || echo '$(srcdir)/'`zmapWindowNavigatorMenus.cpp

libZMapWindowGUI_la-zmapWindowNavigatorWidget.lo: zmapWindowNavigatorWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowNavigatorWidget.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorWidget.Tpo -c -o libZMapWindowGUI_la-zmapWindowNavigatorWidget.lo `test -f 'zmapWindowNavigatorWidget.cpp' || echo '$(srcdir)/'`zmapWindowNavigatorWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorWidget.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowNavigatorWidget.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowNavigatorWidget.cpp' object='libZMapWindowGUI_la-zmapWindowNavigatorWidget.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowNavigatorWidget.lo `test -f 'zmapWindowNavigatorWidget.cpp' || echo '$(srcdir)/'`zmapWindowNavigatorWidget.cpp

libZMapWindowGUI_la-zmapWindowPreferences.lo: zmapWindowPreferences.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowPreferences.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowPreferences.Tpo -c -o libZMapWindowGUI_la-zmapWindowPreferences.lo `test -f 'zmapWindowPreferences.cpp' || echo '$(srcdir)/'`zmapWindowPreferences.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowPreferences.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowPreferences.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowPreferences.cpp' object='libZMapWindowGUI_la-zmapWindowPreferences.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowPreferences.lo `test -f 'zmapWindowPreferences.cpp' || echo '$(srcdir)/'`zmapWindowPreferences.cpp

libZMapWindowGUI_la-zmapWindowPrint.lo: zmapWindowPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowPrint.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowPrint.Tpo -c -o libZMapWindowGUI_la-zmapWindowPrint.lo `test -f 'zmapWindowPrint.cpp' || echo '$(srcdir)/'`zmapWindowPrint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowPrint.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowPrint.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowPrint.cpp' object='libZMapWindowGUI_la-zmapWindowPrint.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowPrint.lo `test -f 'zmapWindowPrint.cpp' || echo '$(srcdir)/'`zmapWindowPrint.cpp

libZMapWindowGUI_la-zmapWindowRemoteControl.lo: zmapWindowRemoteControl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowRemoteControl.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControl.Tpo -c -o libZMapWindowGUI_la-zmapWindowRemoteControl.lo `test -f 'zmapWindowRemoteControl.cpp' || echo '$(srcdir)/'`zmapWindowRemoteControl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControl.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControl.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowRemoteControl.cpp' object='libZMapWindowGUI_la-zmapWindowRemoteControl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowRemoteControl.lo `test -f 'zmapWindowRemoteControl.cpp' || echo '$(srcdir)/'`zmapWindowRemoteControl.cpp

libZMapWindowGUI_la-zmapWindowRemoteControlUtils.lo: zmapWindowRemoteControlUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowRemoteControlUtils.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControlUtils.Tpo -c -o libZMapWindowGUI_la-zmapWindowRemoteControlUtils.lo `test -f 'zmapWindowRemoteControlUtils.cpp' || echo '$(srcdir)/'`zmapWindowRemoteControlUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControlUtils.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowRemoteControlUtils.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowRemoteControlUtils.cpp' object='libZMapWindowGUI_la-zmapWindowRemoteControlUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowRemoteControlUtils.lo `test -f 'zmapWindowRemoteControlUtils.cpp' || echo '$(srcdir)/'`zmapWindowRemoteControlUtils.cpp

libZMapWindowGUI_la-zmapWindowScale.lo: zmapWindowScale.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowScale.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowScale.Tpo -c -o libZMapWindowGUI_la-zmapWindowScale.lo `test -f 'zmapWindowScale.cpp' || echo '$(srcdir)/'`zmapWindowScale.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowScale.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowScale.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowScale.cpp' object='libZMapWindowGUI_la-zmapWindowScale.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowScale.lo `test -f 'zmapWindowScale.cpp' || echo '$(srcdir)/'`zmapWindowScale.cpp

libZMapWindowGUI_la-zmapWindowSearch.lo: zmapWindowSearch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowSearch.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowSearch.Tpo -c -o libZMapWindowGUI_la-zmapWindowSearch.lo `test -f 'zmapWindowSearch.cpp' || echo '$(srcdir)/'`zmapWindowSearch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowSearch.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowSearch.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowSearch.cpp' object='libZMapWindowGUI_la-zmapWindowSearch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowSearch.lo `test -f 'zmapWindowSearch.cpp' || echo '$(srcdir)/'`zmapWindowSearch.cpp

libZMapWindowGUI_la-zmapWindowSeqDisp.lo: zmapWindowSeqDisp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowSeqDisp.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowSeqDisp.Tpo -c -o libZMapWindowGUI_la-zmapWindowSeqDisp.lo `test -f 'zmapWindowSeqDisp.cpp' || echo '$(srcdir)/'`zmapWindowSeqDisp.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowSeqDisp.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowSeqDisp.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowSeqDisp.cpp' object='libZMapWindowGUI_la-zmapWindowSeqDisp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowSeqDisp.lo `test -f 'zmapWindowSeqDisp.cpp' || echo '$(srcdir)/'`zmapWindowSeqDisp.cpp

libZMapWindowGUI_la-zmapWindowState.lo: zmapWindowState.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowState.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowState.Tpo -c -o libZMapWindowGUI_la-zmapWindowState.lo `test -f 'zmapWindowState.cpp' || echo '$(srcdir)/'`zmapWindowState.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowState.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowState.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowState.cpp' object='libZMapWindowGUI_la-zmapWindowState.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowState.lo `test -f 'zmapWindowState.cpp' || echo '$(srcdir)/'`zmapWindowState.cpp

libZMapWindowGUI_la-zmapWindowStats.lo: zmapWindowStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowStats.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStats.Tpo -c -o libZMapWindowGUI_la-zmapWindowStats.lo `test -f 'zmapWindowStats.cpp' || echo '$(srcdir)/'`zmapWindowStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStats.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStats.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowStats.cpp' object='libZMapWindowGUI_la-zmapWindowStats.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowStats.lo `test -f 'zmapWindowStats.cpp' || echo '$(srcdir)/'`zmapWindowStats.cpp

libZMapWindowGUI_la-zmapWindowStyle.lo: zmapWindowStyle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowStyle.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyle.Tpo -c -o libZMapWindowGUI_la-zmapWindowStyle.lo `test -f 'zmapWindowStyle.cpp' || echo '$(srcdir)/'`zmapWindowStyle.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyle.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyle.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowStyle.cpp' object='libZMapWindowGUI_la-zmapWindowStyle.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowStyle.lo `test -f 'zmapWindowStyle.cpp' || echo '$(srcdir)/'`zmapWindowStyle.cpp

libZMapWindowGUI_la-zmapWindowStyles.lo: zmapWindowStyles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowStyles.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyles.Tpo -c -o libZMapWindowGUI_la-zmapWindowStyles.lo `test -f 'zmapWindowStyles.cpp' || echo '$(srcdir)/'`zmapWindowStyles.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyles.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowStyles.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowStyles.cpp' object='libZMapWindowGUI_la-zmapWindowStyles.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowStyles.lo `test -f 'zmapWindowStyles.cpp' || echo '$(srcdir)/'`zmapWindowStyles.cpp

libZMapWindowGUI_la-zmapWindowUtils.lo: zmapWindowUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowUtils.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowUtils.Tpo -c -o libZMapWindowGUI_la-zmapWindowUtils.lo `test -f 'zmapWindowUtils.cpp' || echo '$(srcdir)/'`zmapWindowUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowUtils.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowUtils.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowUtils.cpp' object='libZMapWindowGUI_la-zmapWindowUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowUtils.lo `test -f 'zmapWindowUtils.cpp' || echo '$(srcdir)/'`zmapWindowUtils.cpp

libZMapWindowGUI_la-zmapWindowZoomControl.lo: zmapWindowZoomControl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libZMapWindowGUI_la-zmapWindowZoomControl.lo -MD -MP -MF $(DEPDIR)/libZMapWindowGUI_la-zmapWindowZoomControl.Tpo -c -o libZMapWindowGUI_la-zmapWindowZoomControl.lo `test -f 'zmapWindowZoomControl.cpp' || echo '$(srcdir)/'`zmapWindowZoomControl.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libZMapWindowGUI_la-zmapWindowZoomControl.Tpo $(DEPDIR)/libZMapWindowGUI_la-zmapWindowZoomControl.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='zmapWindowZoomControl.cpp' object='libZMapWindowGUI_la-zmapWindowZoomControl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libZMapWindowGUI_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libZMapWindowGUI_la-zmapWindowZoomControl.lo `test -f 'zmapWindowZoomControl.cpp' || echo '$(srcdir)/'`zmapWindowZoomControl.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
