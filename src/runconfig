#!/bin/bash
#
# Noddy script to run configure as alphas + Roys machine are far from standard.
#

root=`dirname $0`
script=`basename $0`

msgAndExit ()
{
  echo "Error: $1"
  exit 1
}


opsys=`uname`

case $opsys in

  OSF1 )
    locals=/nfs/team71/acedb/zmap/prefix/ALPHA/bin
    PATH="$locals:/usr/local/gtk2/bin:$PATH"
    export PATH

    # NOTE that currently the LDFLAGS stuff does not get through the configure step
    # and so does not work....not sure why....
    popt=/nfs/team71/acedb/zmap/prefix/ALPHA
    CC_args='CC=cc'

    # N.B. level5 messages just produces too much output for everyday use....
    CFLAGS_args="CFLAGS=-I$popt/include -msg_enable level4"
    LDFLAGS_args="LDFLAGS=-rpath /usr/local/gtk2/lib:$popt/lib"

    locals=/nfs/team71/acedb/zmap/prefix/ALPHA/lib/pkgconfig
    PKG_CONFIG_PATH="$locals:/usr/local/gtk2/lib/pkgconfig"
    export PKG_CONFIG_PATH 
    ;;

  Linux )

    case `uname -m` in
      
      x86_64 )

         locals=~zmap/prefix/LINUX_64
         PATH="$locals/bin:$PATH"
         export PATH

         PKG_CONFIG_PATH="$locals/lib/pkgconfig"
         export PKG_CONFIG_PATH
         LD_LIBRARY_PATH="$locals/lib"
         export LD_LIBRARY_PATH

         CC_args=''
         CFLAGS_args='CFLAGS=-Wall'
         # make sure zmap executable has path to foocanvas library.
         LDFLAGS_args="LDFLAGS=-Xlinker -rpath -Xlinker $locals/lib" 
         ;;

       * )

         locals=~zmap/prefix/LINUX
         software=/software/acedb
         use_slash_software=true
	 use_gprof=no
	 
         # To test a new version of foocanvas uncomment next line and set it to the prefix you installed foocanvas to
	 foo_test="" #/var/tmp/foocanvas-prefix
	 # the rest of the code does the rest.
         
         if [ "x$use_slash_software" == "xtrue" ] ; then
             PATH="$software/bin:$locals/bin:$PATH"
             PKG_CONFIG=$software/bin/pkg-config

             # To test a new version of foocanvas add the directory containing its pkgconfig file to the
             # front of this lot....
             PKG_CONFIG_PATH="$software/lib/pkgconfig:/usr/lib/pkgconfig:$locals/lib/pkgconfig"

             # To test a new version of foocanvas add the directory containing its library
             # front of this lot....
             LD_LIBRARY_PATH="$software/lib:$locals/lib"

             # make sure zmap executable has path to foocanvas library.
             # To test a new version of foocanvas add its "-L$HOME/ZMap/ZMap_Curr/local/lib -lfoocanvas" to
             # the end of this lot and add -XLinker flags (-Xlinker -rpath -Xlinker $HOME/ZMap/ZMap_Curr/local/lib)
             # to the front.
             local_LDFLAGS="-Xlinker -rpath -Xlinker $software/lib -L$software/lib  -Xlinker -rpath -Xlinker $locals/lib " 

	     if [ "x$foo_test" != "x" ] ; then
		 PKG_CONFIG_PATH="$foo_test/lib/pkgconfig:$PKG_CONFIG_PATH"
		 LD_LIBRARY_PATH="$foo_test/lib:$LD_LIBRARY_PATH"
		 local_LDFLAGS="-Xlinker -rpath -Xlinker $foo_test/lib $local_LDFLAGS -L$foo_test/lib"
	     fi
	     if [ "x$use_gprof" == "xyes" ]; then
		 local_LDFLAGS="-pg $local_LDFLAGS"
	     fi
	     LDFLAGS_args="LDFLAGS=$local_LDFLAGS"
         else
             PATH="$locals/bin:$PATH"
             PKG_CONFIG_PATH="$locals/lib/pkgconfig"
             LD_LIBRARY_PATH="$locals/lib"

             # make sure zmap executable has path to foocanvas library.
             LDFLAGS_args="LDFLAGS=-Xlinker -rpath -Xlinker $locals/lib" 
         fi

         export PATH
         export PKG_CONFIG_PATH
         export LD_LIBRARY_PATH

         CC_args=''
         CFLAGS_args='CFLAGS=-Wall -g'

    esac ;;

 Darwin )
    # SET PATH TO INCLUDE ~zmap/prefix && /sw/bin in that order
    # This is for autotools and pkg-config respectively
    # AceConn ... 
    # AceConn is installed in /sw/lib && /sw/include for now. A couple of things to note. (manual copy)
    # The AceConn-1.1.pc file is installed in /sw/lib/pkgconfig/ (manual copy)
    # The compile of AceConn using the make as setup didn't run ranlib!
    # Simply run ranlib /sw/lib/libAceConn.a && ranlib /sw/lib/libmd5.a
    # foocanvas is currently installed in below location...

    echo "*** WARNING *** "
    echo "*** WARNING *** : Are MAC_MOUNT_POINT && ZMAP_PREFIX set correctly? Edit $0"
    echo "*** WARNING *** "

    foocanvas_prefix=""
    gtk_prefix="/usr/local"
    universal_build="yes"


    PATH=$gtk_prefix/bin:$PATH
    PKG_CONFIG=$gtk_prefix/bin/pkg-config
    PKG_CONFIG_PATH=$gtk_prefix/lib/pkgconfig
    ACLOCAL_FLAGS="-I $gtk_prefix/share/aclocal"
    export LD_LIBRARY_PATH=$gtk_prefix/lib

    CC_args=""
    CFLAGS_args="CFLAGS=-Wall -I$gtk_prefix/include"
    local_LDFLAGS="-Xlinker -bind_at_load -L$gtk_prefix/lib"

#    LDFLAGS_args='LDFLAGS=-Xlinker -bind_at_load -L/sw/lib' # added -L/sw/lib for the imac desktop

    if [ "x$foocanvas_prefix" != "x" ]; then 
	PKG_CONFIG_PATH="$foocanvas_prefix/lib/pkgconfig:$PKG_CONFIG_PATH"
	local_LDFLAGS="-Xlinker -rpath -Xlinker $foocanvas_prefix/lib $local_LDFLAGS -L$foocanvas_prefix/lib"
    fi

    if [ "x$universal_build" == "xyes" ]; then
	SDK=/Developer/SDKs/MacOSX10.4u.sdk
	CC_args="--disable-dependency-tracking --with-macosx-sdk-path=$SDK"
	PATH=$SDK/usr/bin:$PATH
    fi

    LDFLAGS_args="LDFLAGS=$local_LDFLAGS"
    
    export PKG_CONFIG
    export PKG_CONFIG_PATH
    export ACLOCAL_FLAGS
    ;;
  * )
    msgAndExit "unsupported operating system: $opsys" ;;

esac

echo "$script : Running " $root/configure --enable-shared --disable-static --enable-debug --enable-shtml-doc $CC_args "$CFLAGS_args" "$LDFLAGS_args" "$@"
echo "=========================================================================="


# run the configure.......watch out for the quoting, sometimes we want the variable to
# be interpreted as a single cmdline arg, sometimes as multiple ones.

$root/configure --enable-debug --enable-shtml-doc $CC_args "$CFLAGS_args" "$LDFLAGS_args" "$@" || msgAndExit "configure script failed"


exit 0

