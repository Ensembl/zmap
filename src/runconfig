#!/usr/local/bin/bash
#
# Noddy script to run configure as alphas + Roys machine are far from standard.
#

root=`dirname $0`
script=`basename $0`

msgAndExit ()
{
  echo "Error: $1"
  exit 1
}


opsys=`uname`

case $opsys in

  OSF1 )
    locals=~acedb/ZMap/prefix/ALPHA/bin
    PATH="$locals:/usr/local/gtk2/bin:$PATH"
    export PATH

    # NOTE that currently the LDFLAGS stuff does not get through the configure step
    # and so does not work....not sure why....
    popt=~acedb/ZMap/prefix/ALPHA
    cc_args='CC=cc'
    cflags_args="CFLAGS=-I$popt/include -msg_enable level4"
    ld_args="LDFLAGS=-rpath /usr/local/gtk2/lib:$popt/lib"

    locals=~acedb/ZMap/prefix/ALPHA/lib/pkgconfig
    PKG_CONFIG_PATH="$locals:/usr/local/gtk2/lib/pkgconfig"
    export PKG_CONFIG_PATH ;;

  Linux )
    locals=~acedb/ZMap/prefix/LINUX
    PATH="$locals/bin:$PATH"
    export PATH

    PKG_CONFIG_PATH="$locals/lib/pkgconfig"
    export PKG_CONFIG_PATH
    LD_LIBRARY_PATH=/usr/local/oracle/lib
    export LD_LIBRARY_PATH

    cc_args='CXXFLAGS=-g CFLAGS=-g'
    cflags_args=''
    ld_args='' ;;

 Darwin )
    # SET PATH TO INCLUDE ~edgrif/installs/bin && /sw/bin in that order
    # This is for autotools and pkg-config respectively
    # AceConn ... 
    # AceConn is installed in /sw/lib && /sw/include for now. A couple of things to note. (manual copy)
    # The AceConn-1.1.pc file is installed in /sw/lib/pkgconfig/ (manual copy)
    # The compile of AceConn using the make as setup didn't run ranlib!
    # Simply run ranlib /sw/lib/libAceConn.a && ranlib /sw/lib/libmd5.a
    # foocanvas is currently installed in below location...
    PKG_CONFIG_PATH=/Users/home/edgrif/foocanvas/lib/pkgconfig:/usr/local/gtk2/lib/pkgconfig
    linkCMD=linkZMap
    echo '#/bin/sh' > $linkCMD
    echo gcc  -g -L/usr/X11R6/lib -L/Users/home/edgrif/foocanvas/lib -L/sw/lib -lfoocanvas -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lintl -liconv   -L/Users/edgrif/packages/AceConn/Ace-Conn/bin.MAC_OSX_THR/ -lAceConn -lmd5 -o zmap -L./lib -lZMapApp -lZMap -lZMapThr -lZMap -lZMapXML -lexpat -lpopt -L/Users/edgrif/packages/AceConn/Ace-Conn/bin.MAC_OSX_THR/ -lAceConn -lmd5 -L/sw/lib -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lintl -liconv   -L/Users/home/edgrif/foocanvas/lib -L/sw/lib -lfoocanvas -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lintl -liconv   -L/sw/lib -lcurl -no-undefined -L/sw/lib -lz  -lX11 -lexpat  -lAceConn >> $linkCMD
    chmod 700 $linkCMD
    echo "See notes in $0 about Mac Builds" >&2
    echo You will need to run ./$linkCMD after make >&2
    export PKG_CONFIG_PATH;;

  * )
    msgAndExit "unsupported operating system: $opsys" ;;

esac

echo "$script : Running " $root/configure --enable-debug $cc_args "$cflags_args" "$ld_args"
echo "=========================================================================="


# run the configure.......watch out for the quoting, sometimes we want the variable to
# be interpreted as a single cmdline arg, sometimes as multiple ones.

$root/configure --enable-debug $cc_args "$cflags_args" "$ld_args" || msgAndExit "configure script failed"


exit 0

